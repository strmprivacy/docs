{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/StreamTree",
    "definitions": {
        "StreamTree": {
            "properties": {
                "stream": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.Stream",
                    "additionalProperties": false
                },
                "key_stream": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KeyStream",
                    "additionalProperties": false
                },
                "derived": {
                    "items": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.Stream"
                    },
                    "additionalProperties": false,
                    "type": "array"
                },
                "batch_exporters": {
                    "items": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.BatchExporter"
                    },
                    "additionalProperties": false,
                    "type": "array"
                },
                "kafka_exporters": {
                    "items": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaExporter"
                    },
                    "additionalProperties": false,
                    "type": "array"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Stream Tree"
        },
        "strmprivacy.api.entities.v1.BatchExporter": {
            "properties": {
                "ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.BatchExporterRef",
                    "additionalProperties": false
                },
                "stream_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.StreamRef",
                    "additionalProperties": false
                },
                "key_stream_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KeyStreamRef",
                    "additionalProperties": false
                },
                "interval": {
                    "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
                    "type": "string",
                    "description": "constraints:interval \u003e 30sinterval \u003c TBD  (-- api-linter: core::0122::name-suffix=disabled     aip.dev/not-precedent: We refer to the sink by name. --)",
                    "format": "regex"
                },
                "sink_name": {
                    "type": "string",
                    "description": "constraints: generic name constraints"
                },
                "path_prefix": {
                    "type": "string",
                    "description": "constraints:Total key size on S3 is 1024 unicode characters max. The export filenames arecreated from the stream name suffixed with partition numbers and a timestamp.Suggestion: generic name constraint"
                },
                "include_existing_events": {
                    "type": "boolean"
                },
                "data_connector_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.DataConnectorRef",
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Batch Exporter",
            "description": "A batch exporter."
        },
        "strmprivacy.api.entities.v1.BatchExporterRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "constraints: generic name constraint"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Batch Exporter Ref"
        },
        "strmprivacy.api.entities.v1.Credentials": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string",
                    "description": "as this property is secret, it is not always returned"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Credentials",
            "description": "Credentials to produce to the event-gateway, or to consume from egress."
        },
        "strmprivacy.api.entities.v1.DataConnectorRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Data Connector Ref"
        },
        "strmprivacy.api.entities.v1.KafkaClusterRef": {
            "properties": {
                "billing_id": {
                    "type": "string",
                    "description": "(-- streammachine for the default export cluster --)"
                },
                "name": {
                    "type": "string",
                    "description": "constraints: generic name constraint"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka Cluster Ref",
            "description": "How to refer to a certain Kafka cluster."
        },
        "strmprivacy.api.entities.v1.KafkaExporter": {
            "properties": {
                "ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaExporterRef",
                    "additionalProperties": false
                },
                "stream_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.StreamRef",
                    "additionalProperties": false
                },
                "target": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaExporterTarget",
                    "additionalProperties": false
                },
                "users": {
                    "items": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaUser"
                    },
                    "additionalProperties": false,
                    "type": "array"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka Exporter"
        },
        "strmprivacy.api.entities.v1.KafkaExporterRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "default value  \u003ccluster-name\u003e-\u003cstream-name\u003econstraints: generic name constraint"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka Exporter Ref"
        },
        "strmprivacy.api.entities.v1.KafkaExporterTarget": {
            "properties": {
                "cluster_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaClusterRef",
                    "additionalProperties": false,
                    "description": "what cluster to produce to"
                },
                "topic": {
                    "type": "string",
                    "description": "the topic this exporter produces toconstraints: access checked on creation of kafka exporter"
                },
                "client_id": {
                    "type": "string",
                    "description": "used to access the target Kafka Cluster in case of OAuth based authentication"
                },
                "client_secret": {
                    "type": "string",
                    "description": "used to access the target Kafka Cluster in case of OAuth based authentication"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka Exporter Target"
        },
        "strmprivacy.api.entities.v1.KafkaUser": {
            "properties": {
                "ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaUserRef",
                    "additionalProperties": false
                },
                "kafka_exporter_name": {
                    "type": "string",
                    "description": "(-- api-linter: core::0122::name-suffix=disabled     aip.dev/not-precedent: We refer to the kafka exporter by name. --)"
                },
                "topic": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                },
                "cluster_ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KafkaClusterRef",
                    "additionalProperties": false
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka User",
            "description": "User credentials to consume from topic produced by Kafka Exporter.The kafka exporter is linked to a certain cluster, so this entity is bound to a certainkafka cluster."
        },
        "strmprivacy.api.entities.v1.KafkaUserRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "constraints: generic name constraint"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Kafka User Ref"
        },
        "strmprivacy.api.entities.v1.KeyStream": {
            "properties": {
                "ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.KeyStreamRef",
                    "additionalProperties": false
                },
                "status": {
                    "type": "string",
                    "description": "-- TODO: this field is not used --"
                },
                "kafka_topic": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Key Stream",
            "description": "A Stream of key-link, encryption-key messages created from a source streamwith the same `name`."
        },
        "strmprivacy.api.entities.v1.KeyStreamRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the stream"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Key Stream Ref",
            "description": "refers to a key stream."
        },
        "strmprivacy.api.entities.v1.Limits": {
            "properties": {
                "event_rate": {
                    "type": "string",
                    "description": "filled in from customer profile"
                },
                "event_count": {
                    "type": "string",
                    "description": "filled in from customer profile"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Limits"
        },
        "strmprivacy.api.entities.v1.MaskedFields": {
            "properties": {
                "hash_type": {
                    "type": "string",
                    "description": "default Murmurhash3 for empty string"
                },
                "seed": {
                    "type": "string",
                    "description": "hashing seedconstraints: size \u003c 1000, unicode"
                },
                "field_patterns": {
                    "additionalProperties": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.MaskedFields.PatternList",
                        "additionalProperties": false
                    },
                    "type": "object",
                    "description": "map of event-contract-ref vs field patternsconstraints: event-contract-refs should be existing event contracts field_patterns should be valid values (checked by event-core) the field_patterns list should have no duplicates."
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Masked Fields"
        },
        "strmprivacy.api.entities.v1.MaskedFields.PatternList": {
            "properties": {
                "field_patterns": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Pattern List"
        },
        "strmprivacy.api.entities.v1.Stream": {
            "properties": {
                "ref": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.StreamRef",
                    "additionalProperties": false
                },
                "description": {
                    "type": "string",
                    "description": "customer's description for this Stream."
                },
                "consent_levels": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array",
                    "description": "consent levels for derived streamsconstraints:size \u003c 50if consent_level_type ==  CUMULATIVE thensize = 1endif"
                },
                "consent_level_type": {
                    "enum": [
                        "CONSENT_LEVEL_TYPE_UNSPECIFIED",
                        0,
                        "CUMULATIVE",
                        1,
                        "GRANULAR",
                        2
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Consent Level Type",
                    "description": "Consent level is meant to interpret the consent-levels of an event for decryption purposes only.Cumulative means that the highest consent-level in an event must be greater than or equal to the single requested levelfor the decrypted stream.Granular means that the set of consent-levels in an event must enclose the set of requested event levels for thedecrypted stream."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether or not this stream is enabled."
                },
                "limits": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.Limits",
                    "additionalProperties": false,
                    "description": "stream limits"
                },
                "linked_stream": {
                    "type": "string",
                    "description": "null for source streamsconstraints: general name constraint"
                },
                "tags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "tags are meant for customers to tag their streams"
                },
                "credentials": {
                    "items": {
                        "$ref": "#/definitions/strmprivacy.api.entities.v1.Credentials"
                    },
                    "additionalProperties": false,
                    "type": "array"
                },
                "masked_fields": {
                    "$ref": "#/definitions/strmprivacy.api.entities.v1.MaskedFields",
                    "additionalProperties": false,
                    "description": "field masking is defined per OUTPUT stream and event-contract ref. combinationThe default empty map means no masking. Otherwise, the algorithm in the decrypter is as follows. A source stream is (partially) decrypted, and events that don't have enough permissions are dropped. the event contract ref string is used to find a MaskedFields instance. if present, for all field patterns in the MaskedFields instance, the hash with the specified seed is applied."
                },
                "kafka_topic": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Stream",
            "description": "Streams are source or derived streams depending on whether or not linked_stream is null.Key streams are a separate entity in the api."
        },
        "strmprivacy.api.entities.v1.StreamRef": {
            "properties": {
                "billing_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the streamconstraints: generic name"
                },
                "project_id": {
                    "type": "string"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "title": "Stream Ref",
            "description": "refers to a event stream."
        }
    }
}