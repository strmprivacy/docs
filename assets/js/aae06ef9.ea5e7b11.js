"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[7170],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),m=l,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:l,o[1]=c;for(var i=2;i<a;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7421:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return u},default:function(){return p}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),o=["components"],c={},s=void 0,i={unversionedId:"cli-reference/listen-web-socket",id:"cli-reference/listen-web-socket",title:"listen-web-socket",description:"The global listen command is used for starting a Web Socket listener",source:"@site/docs/cli-reference/listen-web-socket.md",sourceDirName:"cli-reference",slug:"/cli-reference/listen-web-socket",permalink:"/docs/docs/latest/cli-reference/listen-web-socket",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"key-stream",permalink:"/docs/docs/latest/cli-reference/key-stream"},next:{title:"schema-code",permalink:"/docs/docs/latest/cli-reference/schema-code"}},u=[{value:"(no subcommand)",id:"no-subcommand",children:[{value:"Usage",id:"usage",children:[],level:3},{value:"Arguments",id:"arguments",children:[],level:3},{value:"Flags",id:"flags",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The global ",(0,a.kt)("inlineCode",{parentName:"p"},"listen")," command is used for starting a Web Socket listener\nfor a stream and output all events to the console."),(0,a.kt)("p",null,"This command can receive events from both Source Streams and Derived\nStreams."),(0,a.kt)("h2",{id:"no-subcommand"},"(no subcommand)"),(0,a.kt)("p",null,"Start listening for events."),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"strm listen web-socket (stream-name) [flags]")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("table",{style:{width:"100%",display:"table"}},(0,a.kt)("colgroup",null,(0,a.kt)("col",{style:{width:"50%"}}),(0,a.kt)("col",{style:{width:"50%"}})),(0,a.kt)("tbody",null,(0,a.kt)("tr",{class:"odd"},(0,a.kt)("td",null,(0,a.kt)("p",null,"Argument")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Description"))),(0,a.kt)("tr",{class:"even"},(0,a.kt)("td",null,(0,a.kt)("p",null,"stream-name")),(0,a.kt)("td",null,(0,a.kt)("p",null,"The name of the stream to read events from."))))),(0,a.kt)("h3",{id:"flags"},"Flags"),(0,a.kt)("table",{style:{width:"100%",display:"table"}},(0,a.kt)("colgroup",null,(0,a.kt)("col",{style:{width:"50%"}}),(0,a.kt)("col",{style:{width:"50%"}})),(0,a.kt)("tbody",null,(0,a.kt)("tr",{class:"odd"},(0,a.kt)("td",null,(0,a.kt)("p",null,"Flag")),(0,a.kt)("td",null,(0,a.kt)("p",null,"Description"))),(0,a.kt)("tr",{class:"even"},(0,a.kt)("td",null,(0,a.kt)("p",null,"client-id")),(0,a.kt)("td",null,(0,a.kt)("p",null,"OAuth2 client credentials"))),(0,a.kt)("tr",{class:"odd"},(0,a.kt)("td",null,(0,a.kt)("p",null,"client-secret")),(0,a.kt)("td",null,(0,a.kt)("p",null,"OAuth2 client credentials"))))),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/docs/latest/#global-flags"},"Global flags")," for all global flags."),(0,a.kt)("p",null,"Client id and secret are optional flags ",(0,a.kt)("strong",{parentName:"p"},"provided")," the stream has been\ncreated with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--save")," flag. In that case\n",(0,a.kt)("inlineCode",{parentName:"p"},"~/.config/strmprivacy/saved-entities/Stream/<stream-name>.json")," will\nhold the necessary credentials, and the cli will use these."))}p.isMDXComponent=!0}}]);