"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[2176],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(t),f=a,g=m["".concat(i,".").concat(f)]||m[f]||p[f]||o;return t?r.createElement(g,s(s({ref:n},c),{},{components:t})):r.createElement(g,s({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6069:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],l={},i=void 0,u={unversionedId:"cli-reference/usage",id:"version-1.0.0/cli-reference/usage",title:"usage",description:"Usage allows you to see how many events were sent on a certain stream.",source:"@site/versioned_docs/version-1.0.0/cli-reference/usage.md",sourceDirName:"cli-reference",slug:"/cli-reference/usage",permalink:"/docs/1.0.0/cli-reference/usage",tags:[],version:"1.0.0",frontMatter:{},sidebar:"docs",previous:{title:"stream",permalink:"/docs/1.0.0/cli-reference/stream"},next:{title:"Reach out to us",permalink:"/docs/1.0.0/contact/"}},c=[{value:"get",id:"get",children:[{value:"Usage",id:"usage",children:[],level:3},{value:"Arguments",id:"arguments",children:[],level:3},{value:"Flags",id:"flags",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2}],p={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Usage allows you to see how many events were sent on a certain stream.\nThis is currently only the events received on the event-gateway.\nExtracting events via Kafka or Batch exporters is not included."),(0,o.kt)("h2",{id:"get"},"get"),(0,o.kt)("p",null,"Get usage on a topic by name"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"strm get usage --help\n\nReturns the usage for a certain stream over a certain period.\n\nThe values are interpolated from cumulative event accounts, and sampled over intervals\n(the --by option). The default output is csv, but json is also available.\n\nThe default range is over the last 24 hours, with a default interval of 15 minutes.\n\nUsage:\n  strm get usage (stream-name) [flags]\n\nFlags:\n      --by string      aggregate by (seconds|..m|..h|..d)\n      --from string    from YYYY/M/D-HH:mm\n  -h, --help           help for usage\n      --json           json output\n      --until string   until YYYY/M/D-HH:mm\n")),(0,o.kt)("h3",{id:"arguments"},"Arguments"),(0,o.kt)("p",null,"stream-name",(0,o.kt)("br",{parentName:"p"}),"\n","the name of the stream for which to retrieve usage data."),(0,o.kt)("h3",{id:"flags"},"Flags"),(0,o.kt)("p",null,"--stream-name",(0,o.kt)("br",{parentName:"p"}),"\n","The name of the stream you want the usage for"),(0,o.kt)("p",null,"--from",(0,o.kt)("br",{parentName:"p"}),"\n","The first moment of interest"),(0,o.kt)("p",null,"--until",(0,o.kt)("br",{parentName:"p"}),"\n","The first moment of interest"),(0,o.kt)("p",null,"--by",(0,o.kt)("br",{parentName:"p"}),"\n","Aggregation period"),(0,o.kt)("p",null,"--json",(0,o.kt)("br",{parentName:"p"}),"\n","Json instead of csv"),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"    strm get usage demo \\\n      --from 2021/8/12-11:00 \\\n      --until 2021/8/12-14:00 \\\n      --by 10m\n    from,                            count, duration, change, rate\n    2021-08-12T11:00:00.000000+0200, 5314,  600,      NaN,    NaN\n    2021-08-12T11:10:00.000000+0200, 5329,  600,      15,     0.03\n    2021-08-12T11:20:00.000000+0200, 5344,  600,      15,     0.03\n    2021-08-12T11:30:00.000000+0200, 5360,  600,      16,     0.03\n    2021-08-12T11:40:00.000000+0200, 5693,  600,      333,    0.56\n    2021-08-12T11:50:00.000000+0200, 5708,  600,      15,     0.03\n    2021-08-12T12:00:00.000000+0200, 5724,  600,      16,     0.03\n    2021-08-12T12:10:00.000000+0200, 5739,  600,      15,     0.03\n    2021-08-12T12:20:00.000000+0200, 5755,  600,      16,     0.03\n    2021-08-12T12:30:00.000000+0200, 5770,  600,      15,     0.03\n    2021-08-12T12:40:00.000000+0200, 5786,  600,      16,     0.03\n    2021-08-12T12:50:00.000000+0200, 5802,  600,      16,     0.03\n    2021-08-12T13:00:00.000000+0200, 5817,  600,      15,     0.03\n    2021-08-12T13:10:00.000000+0200, 11650, 600,      5833,   9.72\n")))}m.isMDXComponent=!0}}]);