"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[2660],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},s=Object.keys(t);for(a=0;a<s.length;a++)n=s[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(a=0;a<s.length;a++)n=s[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,s=t.originalType,l=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(h,o(o({ref:e},p),{},{components:n})):a.createElement(h,o({ref:e},p))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5370:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={title:"Batch versus Stream",hide_table_of_contents:!1},o=void 0,i={unversionedId:"concepts/data-processing/batch-vs-streaming",id:"concepts/data-processing/batch-vs-streaming",title:"Batch versus Stream",description:"As data processing can be done in various ways, it is important to know the difference. This article covers",source:"@site/docs/02-concepts/01-data-processing/02-batch-vs-streaming.md",sourceDirName:"02-concepts/01-data-processing",slug:"/concepts/data-processing/batch-vs-streaming",permalink:"/docs/latest/concepts/data-processing/batch-vs-streaming",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Batch versus Stream",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"PII Field Encryption",permalink:"/docs/latest/concepts/data-processing/pii-field-encryption"},next:{title:"Data Pipelines",permalink:"/docs/latest/concepts/data-processing/data-pipelines"}},l={},c=[{value:"Batch processing",id:"batch-processing",level:2},{value:"Stream processing",id:"stream-processing",level:2}],p={toc:c};function d(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"As data processing can be done in various ways, it is important to know the difference. This article covers\nthe differences between Batch and Stream processing of data."),(0,r.kt)("h1",{id:"batch-versus-stream"},"Batch versus Stream"),(0,r.kt)("p",null,"Batch processing, as the name implies, works by processing data in\n(typically large) batches, often as part of a batch processing pipeline.\nVery often these run at designated times, like some time during the\nnight. While easy to reason about and relatively simple to implement,\nthis automatically implies that there will be (potentially big) delays.\nThe opposite is stream processing, where every piece of data (which is\ncalled an event in STRM Privacy) is processed directly, minimizing delays."),(0,r.kt)("p",null,"Both approaches have upsides and downsides and these are also dependent\non the context. If the context is an existing, maybe complex, batch\nflow, it often makes little sense to add a streaming component, unless\nthis is a first step towards a fully streaming process."),(0,r.kt)("p",null,"STRM Privacy provides ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/batch/"},"Batch")," as well\nas ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/streaming/"},"Streaming"),"\nsupport on both the input and output side, to support fully streamed pipelines, batch pipelines and a\nhybrid where data is streamed to STRM and batched downstream."),(0,r.kt)("p",null,"See the table below for an overview:"),(0,r.kt)("table",{style:{width:"100%",display:"table"}},(0,r.kt)("colgroup",null,(0,r.kt)("col",{style:{width:"33%"}}),(0,r.kt)("col",{style:{width:"33%"}}),(0,r.kt)("col",{style:{width:"33%"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("strong",null))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("strong",null,"Streaming"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("strong",null,"Batch")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("strong",null,"Input"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"(Java/Nodejs/Python) drivers")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Batch Jobs"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("strong",null,"Output"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Kafka Exporter")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Batch Exporter, Batch Jobs"))))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Currently, batch input to streaming output is not (yet) supported. Please ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/contact/"},"contact us")," if you are\ninterested in this.")),(0,r.kt)("h2",{id:"batch-processing"},"Batch processing"),(0,r.kt)("p",null,"Batch Processing is currently supported by Batch Jobs. A Batch Job has\nthe same features as streams:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It encrypts data, based on what is declared PII."),(0,r.kt)("li",{parentName:"ul"},"It can decrypt data, based on consent."),(0,r.kt)("li",{parentName:"ul"},"It can mask data."),(0,r.kt)("li",{parentName:"ul"},"It can export data to a cloud bucket."),(0,r.kt)("li",{parentName:"ul"},"It can export the generated encryption keys to blob storage.")),(0,r.kt)("h2",{id:"stream-processing"},"Stream processing"),(0,r.kt)("p",null,"Historically, STRM Privacy has been all about privacy-safe ",(0,r.kt)("em",{parentName:"p"},"streaming")," data. This\ncan be seen in the concepts of an input stream and derived streams.\nEvents sent to STRM Privacy are encrypted\nand the data is put in a Kafka topic. This is then immediately processed\n(ignoring ",(0,r.kt)("a",{parentName:"p",href:"https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#producerconfigs_batch.size"},"Kafka\nBatching"),"\n,\nwhich we use as an optimization) and the data (encrypted or derived\ndata) is available for consumers in near real-time."),(0,r.kt)("p",null,"For streaming consumption of data, we currently provide a way to connect\na Kafka Consumer to your streams, which allows downstream stream\nprocessing."))}d.isMDXComponent=!0}}]);