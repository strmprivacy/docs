"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[1538],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var l=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=l.createContext({}),o=function(e){var n=l.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=o(e.components);return l.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},d=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=o(t),m=a,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return t?l.createElement(v,i(i({ref:n},u),{},{components:t})):l.createElement(v,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var o=2;o<r;o++)i[o]=t[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9833:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return u},default:function(){return d}});var l=t(7462),a=t(3366),r=(t(7294),t(3905)),i=["components"],s={},c=void 0,o={unversionedId:"cli-reference/event-contract",id:"cli-reference/event-contract",title:"event-contract",description:"An Event Contract defines the rules that are to be applied to events.",source:"@site/docs/cli-reference/event-contract.md",sourceDirName:"cli-reference",slug:"/cli-reference/event-contract",permalink:"/docs/latest/cli-reference/event-contract",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"completion",permalink:"/docs/latest/cli-reference/completion"},next:{title:"kafka-cluster",permalink:"/docs/latest/cli-reference/kafka-cluster"}},u=[{value:"get",id:"get",children:[{value:"Usage",id:"usage",children:[],level:3},{value:"Arguments",id:"arguments",children:[],level:3},{value:"Flags",id:"flags",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2},{value:"list",id:"list",children:[{value:"Usage",id:"usage-1",children:[],level:3},{value:"Argments",id:"argments",children:[],level:3},{value:"Flags",id:"flags-1",children:[],level:3},{value:"Example",id:"example-1",children:[],level:3}],level:2},{value:"create",id:"create",children:[{value:"Usage",id:"usage-2",children:[],level:3},{value:"Arguments",id:"arguments-1",children:[],level:3},{value:"Flags",id:"flags-2",children:[],level:3},{value:"Example",id:"example-2",children:[],level:3}],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An Event Contract defines the rules that are to be applied to events."),(0,r.kt)("p",null,"The Event Contract defines:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"the Schema to use via a full Schema reference (handle/name/version)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"the key field")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"the PII fields")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"any validations on fields (e.g. a regex to validate an email\naddress)"))),(0,r.kt)("p",null,"Like Schemas, Event Contracts can be private or public, allowing them to\nbe found and used by others than the owning client. Be careful, public\nEvent Contracts cannot be deleted."),(0,r.kt)("p",null,"Also like Schemas, Event Contracts are versioned using a versioning\nscheme that can be fully determined by the client. The only restrictions\nare that version numbers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MUST follow the semantic version format (major/minor/patch),")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MUST always be ascending"))),(0,r.kt)("p",null,"An Event Contract is uniquely identified by its Event Contract\nreference, in the format (organization handle/event contract\nname/version)."),(0,r.kt)("h2",{id:"get"},"get"),(0,r.kt)("p",null,"Retrieve an event contract"),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"strm get event contract (handle/name/version)")),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,"handle/name/version",(0,r.kt)("br",{parentName:"p"}),"\n","A reference to the contract."),(0,r.kt)("h3",{id:"flags"},"Flags"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/cli-index#global-flags"},"Global flags")," for all global flags."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'strm get event contract strmprivacy/example/1.3.0\n{\n  "ref": {\n    "handle": "strmprivacy",\n    "name": "example",\n    "version": "1.3.0"\n  },\n  "state": "PENDING",\n  "schemaRef": {\n    "handle": "strmprivacy",\n    "name": "demo",\n    "version": "1.0.2"\n  },\n  "isPublic": true,\n  "keyField": "consistentValue",\n  "piiFields": {\n    "consistentValue": 2,\n    "someSensitiveValue": 3,\n    "uniqueIdentifier": 1\n  },\n  "validations": [\n    {\n      "field": "consistentValue",\n      "type": "regex",\n      "value": "^.+$"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"list"},"list"),(0,r.kt)("p",null,"List all event contracts."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"strm list event contracts")),(0,r.kt)("h3",{id:"argments"},"Argments"),(0,r.kt)("p",null,"None."),(0,r.kt)("h3",{id:"flags-1"},"Flags"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/cli-index#global-flags"},"Global flags")," for all global flags."),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'strm list event contracts\n{"eventContracts":[{"ref":{"handle":"strmprivacy","name":"clickstream","version":"0.1.0"},\n  "state":"PENDING","schemaRef":{"handle":"strmprivacy","name":"clickstream","version":"0.1.0"},\n  "isPublic":true,"keyField":"producerSessionId","piiFields":{\n    "customer/id":0,"producerSessionId":1},\n    "validations":[\n      {"field":"customer/id","type":"regex","value":"^.+$"},\n      {"field":"url","type":"regex","value":"^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=\n...\n')),(0,r.kt)("p",null,"This call returns a long line of json, but ",(0,r.kt)("inlineCode",{parentName:"p"},"jq")," can be used to parse the\nresult."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"strm list event contracts | jq -r '.eventContracts[].ref | \"\\(.handle)/\\(.name)/\\(.version)\"'\nstrmprivacy/clickstream/0.1.0\nstrmprivacy/demo_v1/0.1.0\nstrmprivacy/nps_unified_v1/0.1.0\nstrmprivacy/nps_unified_v3/3.0.0\nstrmprivacy/clickstream/0.2.0\ndpg/nps_unified/4.0.0\nstrmprivacy/example/1.2.3\nstrmprivacy/example/1.3.0\ndpg/nps_unified/5.0.0\nstrmprivacy/clickstream/1.0.0\n")),(0,r.kt)("h2",{id:"create"},"create"),(0,r.kt)("h3",{id:"usage-2"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"strm create event contract (definition-file)")),(0,r.kt)("h3",{id:"arguments-1"},"Arguments"),(0,r.kt)("table",{style:{width:"100%",display:"table"}},(0,r.kt)("colgroup",null,(0,r.kt)("col",{style:{width:"50%"}}),(0,r.kt)("col",{style:{width:"50%"}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",{class:"odd"},(0,r.kt)("td",null,(0,r.kt)("p",null,"Name")),(0,r.kt)("td",null,(0,r.kt)("p",null,"Description"))),(0,r.kt)("tr",{class:"even"},(0,r.kt)("td",null,(0,r.kt)("p",null,"definition-file")),(0,r.kt)("td",null,(0,r.kt)("p",null,"the file containing the actual event contract."))))),(0,r.kt)("h3",{id:"flags-2"},"Flags"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/cli-index#global-flags"},"Global flags")," for all global flags."),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("p",null,"Example file:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"event contract.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "ref": {\n    "handle": "my_own_handle",\n    "name": "example",\n    "version": "1.2.3"\n  },\n  "state": "PENDING",\n  "schemaRef": {\n    "handle": "strmprivacy",\n    "name": "demo",\n    "version": "1.0.2"\n  },\n  "isPublic": true,\n  "keyField": "consistent_value",\n  "piiFields": {\n    "consistentValue": 2,\n    "someSensitiveValue": 3,\n    "uniqueIdentifier": 1\n  }\n}\n')),(0,r.kt)("p",null,"And then ",(0,r.kt)("inlineCode",{parentName:"p"},"strm create event contract event contract.json"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ref/handle")," field ",(0,r.kt)("strong",{parentName:"p"},"must")," conform to the handle of your\nbilling-id. You can only set that value via the settings page of the\nconsole."),(0,r.kt)("p",null,"The command line syntax for creating event contracts is going to change\nin an upcoming release."))}d.isMDXComponent=!0}}]);