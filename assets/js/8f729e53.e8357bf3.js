"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[186],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9398:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"Customer Cloud Deployments",hide_table_of_contents:!1,description:"Don't want end-user data leaving your infrastructure? Host your own Data Plane."},i=void 0,s={unversionedId:"concepts/deployment-modes/ccd",id:"concepts/deployment-modes/ccd",title:"Customer Cloud Deployments",description:"Don't want end-user data leaving your infrastructure? Host your own Data Plane.",source:"@site/docs/02-concepts/03-deployment-modes/02-ccd.md",sourceDirName:"02-concepts/03-deployment-modes",slug:"/concepts/deployment-modes/ccd",permalink:"/docs/latest/concepts/deployment-modes/ccd",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Customer Cloud Deployments",hide_table_of_contents:!1,description:"Don't want end-user data leaving your infrastructure? Host your own Data Plane."},sidebar:"docs",previous:{title:"SaaS",permalink:"/docs/latest/concepts/deployment-modes/saas"},next:{title:"Data Connectors",permalink:"/docs/latest/concepts/data-connectors"}},l={},c=[{value:"Supporting the Control Plane",id:"supporting-the-control-plane",level:2},{value:"Deployment in your infrastructure",id:"deployment-in-your-infrastructure",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A Customer Cloud Deployment (CCD) is set of software components created by STRM Privacy, deployed\nin your infrastructure. The goal is for your data and encryption keys, ",(0,r.kt)("strong",{parentName:"p"},"never")," having to leave your infrastructure,\nstrengthening security even further regarding data subject privacy. Since data subject information never leaves your\ninfrastructure, you have full control over the\ndata, where it's stored, how long it's stored, who can access it, etc."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Data Planes were successfully tested on various (managed) Kubernetes implementations: local (",(0,r.kt)("a",{parentName:"p",href:"https://k3s.io/"},"K3S"),")\n, ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine"},"GKE"),", ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/eks/"},"EKS"),"\n, ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/aks/"},"AKS"),", ",(0,r.kt)("a",{parentName:"p",href:"https://www.ovhcloud.com/en/public-cloud/kubernetes/"},"OVHcloud"),".")),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"In the diagram below, you can see where all software runs in a CCD setup:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On the left is your infrastructure (e.g. an AWS EKS cluster in your account)."),(0,r.kt)("li",{parentName:"ul"},"On the right is the STRM Privacy Control Plane (managed by STRM Privacy), which is accessible by gRPC services over\nthe internet.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"ccd infra",src:n(2996).Z+"#fullwidth",width:"981",height:"841"})),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"With the ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/ccd/#installation"},"Helm Chart")," that is used to install the Data Plane in your\ninfrastructure, you can enable/disable various\ncomponents (e.g. disable streaming and only keep batch if only batch jobs are required).")),(0,r.kt)("h2",{id:"supporting-the-control-plane"},"Supporting the Control Plane"),(0,r.kt)("p",null,"The entities doing the data processing receive their configuration from the STRM Privacy Control Plane, which is not\npart of\nyour cluster. Inside your Data Plane, several ",(0,r.kt)("em",{parentName:"p"},"agents")," run that frequently poll\nthe STRM Privacy API. Based on the configuration provided by the control plane, the agents determine whether any new\nentities (e.g. a stream, a batch exporter, ...) are needed, or existing ones should be updated or removed. The agents\nare therefore indirectly controlled via user actions in the ",(0,r.kt)("a",{parentName:"p",href:"https://console.strmprivacy.io"},"STRM Privacy Console"),"\nand/or the ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/reference/cli-reference/"},"CLI"),". Furthermore, the agents automatically keep the resources\nrunning in your Data Plane up-to-date."),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"All components part of the Data Plane directly (i.e. part of\nthe ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/ccd/#installation"},"Helm Chart"),"), are not updated automatically. For updating your\nData Plane, please see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/ccd/updating"},"updating docs"),".")),(0,r.kt)("p",null,"The agents are an implementation of the ",(0,r.kt)("a",{parentName:"p",href:"https://branislavjenco.github.io/desired-state-systems/"},(0,r.kt)("em",{parentName:"a"},"desired state")),"\napproach, which is used by many other popular tools (such as Kubernetes itself). Basically,\nit comes down to three steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Retrieve the desired state from a central configuration location."),(0,r.kt)("li",{parentName:"ol"},"Retrieve the actual running state in your infrastructure."),(0,r.kt)("li",{parentName:"ol"},"Compare the two and make the necessary changes to the actual running state make it equal to the desired state."),(0,r.kt)("li",{parentName:"ol"},"Repeat.")),(0,r.kt)("p",null,"This pattern is very robust, handles failures and dependencies between resources very well. The only requirement is that\noutgoing traffic to ",(0,r.kt)("inlineCode",{parentName:"p"},"https://api.strmprivacy.io")," is allowed. No need for incoming port forwarding rules, DMZ, etc."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"All communication to and from the STRM Privacy Control Plane is TLS encrypted, and defined by\nan ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/api-definitions/tree/master/protos/strmprivacy"},"open-source gRPC protocol"),".")),(0,r.kt)("h2",{id:"deployment-in-your-infrastructure"},"Deployment in your infrastructure"),(0,r.kt)("p",null,"The process of installing the STRM Privacy in your infrastructure is as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"First, the data plane is deployed by you, using the ",(0,r.kt)("a",{parentName:"li",href:"/docs/latest/quickstart/ccd/#installation"},"Helm Chart"),".\nHere you can customize your cluster. This has to\nbe done once at the start and if you'd like to install new versions of the Data Plane. It's your cluster, so we\ndon't auto-update anything that is ",(0,r.kt)("strong",{parentName:"li"},"part of the Helm Chart"),". You decide if you'd like to upgrade and when it happens.\nThe Helm Chart installs all components that are required to run streaming and batch data pipelines within your own\ninfrastructure."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("div",{class:"chip-optional"}," ",(0,r.kt)("div",{class:"chip-content"},"optional")," ")," The third party components in the Data Plane are also deployed by you, using our Helm chart. You can choose if you'd like to use our pre-packaged versions of Kafka, Redis and Postgres, or if you'd like to connect to an external Kafka, Redis and/or Postgres. For example RDS, ElastiCache or Confluent. **Note the remark below.**"),(0,r.kt)("li",{parentName:"ul"},"The rest is deployed by the STRM Privacy agents, using the desired state approach, as described before.")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"The Kafka, Redis and Postgres deployments that are included in the Helm Chart are not configured for, nor should be used\nfor a production setting. Please refer to the products offered by your Cloud Vendor to see the offering for these\nrequirements.")),(0,r.kt)("p",null,"You can choose what components you want to enable, there are two major categories:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stream Processing"),". requires Kafka, Redis, Event Gateway, Streams Agent, Data Connectors Agent and Exporters\nAgent."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Batch Processing"),". requires Postgres, Data Connectors Agent and Batch Jobs Agent.")),(0,r.kt)("p",null,"Both can be enabled simultaneously if the requirement is to run both stream and batch data pipelines."))}d.isMDXComponent=!0},2996:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ccd-c40df49bf4fcae4d718c43f5c1311c6c.svg"}}]);