"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[3967],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3515:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={title:"data-contract",hide_title:!0},o=void 0,c={unversionedId:"reference/cli-reference/strm/create/data-contract",id:"reference/cli-reference/strm/create/data-contract",title:"data-contract",description:"strm create data-contract",source:"@site/docs/04-reference/01-cli-reference/strm/create/data-contract.md",sourceDirName:"04-reference/01-cli-reference/strm/create",slug:"/reference/cli-reference/strm/create/data-contract",permalink:"/docs/latest/reference/cli-reference/strm/create/data-contract",draft:!1,tags:[],version:"current",frontMatter:{title:"data-contract",hide_title:!0},sidebar:"docs",previous:{title:"s3",permalink:"/docs/latest/reference/cli-reference/strm/create/data-connector/s3"},next:{title:"kafka-exporter",permalink:"/docs/latest/reference/cli-reference/strm/create/kafka-exporter"}},s={},l=[{value:"strm create data-contract",id:"strm-create-data-contract",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"strm-create-data-contract"},"strm create data-contract"),(0,a.kt)("p",null,"Create a Data Contract"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Data Contracts are the core of STRM Privacy.\nSee ",(0,a.kt)("a",{parentName:"p",href:"https://docs.strmprivacy.io/docs/latest/concepts/data-contracts/"},"here")," for details"),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"strm create data-contract (handle/name/version) [flags]\n")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Here\'s an example of a Simple Schema file\n\n{\n    "name": "GDDemo",\n    "nodes": [\n        { "type": "STRING", "name": "transactionId", "required": true },\n        { "type": "STRING", "name": "userId"},\n        { "type": "STRING", "name": "email"},\n        { "type": "INTEGER", "name": "age"},\n        { "type": "FLOAT", "name": "height"},\n        { "type": "STRING", "name": "size"},\n        { "type": "INTEGER", "name": "transactionAmount"},\n        { "type": "STRING", "name": "items"},\n        { "type": "STRING", "name": "hairColor"},\n        { "type": "INTEGER", "name": "itemCount"},\n        { "type": "STRING", "name": "date"},\n        { "type": "INTEGER", "name": "purpose"}\n    ],\n}\nHere\'s an example of Data Contract definition file\'\n\n{\n  "keyField": "transactionId",\n  "dataSubjectField": "userId",\n  "validations": [{"field": "email", "type": "regex", "value": "..."}],\n  "fieldMetadata": [\n    {\n      "fieldName": "email",\n      "personalDataConfig": {"isPii": true, "isQuasiId": true, "purposeLevel": 1}\n    },\n    {\n      "fieldName": "userId",\n      "personalDataConfig": {"isPii": false, "isQuasiId": true}\n    },\n    {\n      "fieldName": "userAgeGroup",\n      "personalDataConfig": {"isPii": false, "isQuasiId": true},\n      "statisticalDataType": "ORDINAL",\n      "ordinalValues": ["child", "teenager", "adult", "senior"],\n      "nullHandlingConfig": {"type": "DEFAULT_VALUE", "defaultValue": "adult"}\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"      --contract-definition string   the path to the file with the keyField, and possibly piiFields and validations. See example.\n  -h, --help                         help for data-contract\n      --public                       whether the data contract should be made public (accessible to other STRM Privacy customers)\n      --schema-definition string     filename of the schema definition (yaml or JSON) - either a Simple Schema, Avro Schema or JSON Schema\n")),(0,a.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --api-auth-url string   user authentication host (default "https://accounts.strmprivacy.io")\n      --api-host string       api host and port (default "api.strmprivacy.io:443")\n  -o, --output string         output format [json, json-raw, table, plain] (default "table")\n  -p, --project string        project to use (defaults to context-configured project)\n      --token-file string     token file that contains an access token (default is $HOME/.config/strmprivacy/credentials-<api-auth-url>.json)\n')),(0,a.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/latest/reference/cli-reference/strm/create/"},"strm create"),"\t - Create an entity")))}u.isMDXComponent=!0}}]);