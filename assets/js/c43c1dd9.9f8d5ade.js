"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[3967],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3515:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={title:"data-contract",hide_title:!0},i=void 0,c={unversionedId:"reference/cli-reference/strm/create/data-contract",id:"reference/cli-reference/strm/create/data-contract",title:"data-contract",description:"strm create data-contract",source:"@site/docs/04-reference/01-cli-reference/strm/create/data-contract.md",sourceDirName:"04-reference/01-cli-reference/strm/create",slug:"/reference/cli-reference/strm/create/data-contract",permalink:"/docs/latest/reference/cli-reference/strm/create/data-contract",draft:!1,tags:[],version:"current",frontMatter:{title:"data-contract",hide_title:!0},sidebar:"docs",previous:{title:"s3",permalink:"/docs/latest/reference/cli-reference/strm/create/data-connector/s3"},next:{title:"kafka-exporter",permalink:"/docs/latest/reference/cli-reference/strm/create/kafka-exporter"}},s={},l=[{value:"strm create data-contract",id:"strm-create-data-contract",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],p={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"strm-create-data-contract"},"strm create data-contract"),(0,a.kt)("p",null,"Create a Data Contract"),(0,a.kt)("h3",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Data Contracts are the core of STRM Privacy.\nSee ",(0,a.kt)("a",{parentName:"p",href:"https://docs.strmprivacy.io/docs/latest/concepts/data-contracts/"},"here")," for details"),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"strm create data-contract (handle/name/version) [flags]\n")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Here\'s an example of a Simple Schema file\n\n{\n    "name": "GDDemo",\n    "nodes": [\n        { "type": "STRING", "name": "transactionId", "required": true },\n        { "type": "STRING", "name": "userId"},\n        { "type": "STRING", "name": "email"},\n        { "type": "INTEGER", "name": "age"},\n        { "type": "FLOAT", "name": "height"},\n        { "type": "STRING", "name": "size"},\n        { "type": "INTEGER", "name": "transactionAmount"},\n        { "type": "STRING", "name": "items"},\n        { "type": "STRING", "name": "hairColor"},\n        { "type": "INTEGER", "name": "itemCount"},\n        { "type": "STRING", "name": "date"},\n        { "type": "INTEGER", "name": "purpose"}\n    ],\n}\nHere\'s an example of Data Contract definition file\'\n\n{\n    "ref": { "handle": "strmprivacy", "name": "GDDemo", "version": "1.0.10" },\n    "keyField": "transactionId",\n    "validations": [\n        { "field": "email", "type": "regex", "value": "..." }\n    ],\n    "metadata": {\n        "title": "Schema used for the GDDemo",\n        "description": "Somewhat valid e-commerce data",\n        "industries": [ "e-commerce" ]\n    },\n    "fieldMetadata": [\n    {\n        "fieldName": "email",\n        "personalDataConfig": { "isPii": true, "isQuasiId": true, "purposeLevel": 1 }\n    },\n    {\n        "fieldName": "userId",\n        "personalDataConfig": { "isPii": true, "isQuasiId": true, "purposeLevel": 1 }\n    }\n    ]\n}\n')),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"      --contract-definition string   the path to the file with the keyField, and possibly piiFields and validations. See example.\n  -h, --help                         help for data-contract\n      --public                       whether the data contract should be made public (accessible to other STRM Privacy customers)\n      --schema-definition string     filename of the schema definition (yaml or json) - either a Simple Schema, Avro Schema or Json Schema\n")),(0,a.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      --api-auth-url string   user authentication host (default "https://accounts.strmprivacy.io")\n      --api-host string       api host and port (default "api.strmprivacy.io:443")\n  -o, --output string         output format [json, json-raw, table, plain] (default "table")\n  -p, --project string        project to use (defaults to context-configured project)\n      --token-file string     token file that contains an access token (default is $HOME/.config/strmprivacy/credentials-<api-auth-url>.json)\n')),(0,a.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/latest/reference/cli-reference/strm/create/"},"strm create"),"\t - Create an entity")))}d.isMDXComponent=!0}}]);