"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[2493],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=m(n),u=i,h=p["".concat(l,".").concat(u)]||p[u]||c[u]||s;return n?a.createElement(h,r(r({ref:t},d),{},{components:n})):a.createElement(h,r({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,r=new Array(s);r[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var m=2;m<s;m++)r[m]=n[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5163:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var a=n(7462),i=(n(7294),n(3905));const s={title:"Masked Fields",hide_table_of_contents:!1},r="Masked Fields",o={unversionedId:"concepts/data-contracts/masked-fields",id:"concepts/data-contracts/masked-fields",title:"Masked Fields",description:"Field masking is a mechanism that is applied to events in derived",source:"@site/docs/02-concepts/02-data-contracts/03-masked-fields.md",sourceDirName:"02-concepts/02-data-contracts",slug:"/concepts/data-contracts/masked-fields",permalink:"/docs/latest/concepts/data-contracts/masked-fields",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Masked Fields",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"The strmMeta section",permalink:"/docs/latest/concepts/data-contracts/strm-meta"},next:{title:"Data Subjects",permalink:"/docs/latest/concepts/data-contracts/data-subjects"}},l={},m=[{value:"Mask seed",id:"mask-seed",level:2},{value:"An example",id:"an-example",level:2},{value:"Events in the encrypted privacy stream",id:"events-in-the-encrypted-privacy-stream",level:3},{value:"Events in the derived stream without masking",id:"events-in-the-derived-stream-without-masking",level:3},{value:"Events in the derived stream <strong>with</strong> masking",id:"events-in-the-derived-stream-with-masking",level:3},{value:"Using the masked fields",id:"using-the-masked-fields",level:2}],d={toc:m};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"masked-fields"},"Masked Fields"),(0,i.kt)("p",null,"Field masking is a mechanism that is applied to events in derived\nstreams in order to hide their actual plaintext value."),(0,i.kt)("p",null,"Imagine you have a privacy stream in your company that contains a\ncustomer id. This ",(0,i.kt)("em",{parentName:"p"},"personal data")," field will be encrypted in the privacy\nstream, but in case the data subject has given permission,\nteams (or algorithms) can be used for instance to give personalized\nrecommendations."),(0,i.kt)("p",null,"Without the masking mechanism this would mean that for a certain\ndata subject that has given full permissions, for instance the personal\nhistory would be fully visible within the recommendations team or\nmodels. ",(0,i.kt)("em",{parentName:"p"},"The data scientist would be able to look up someone's personal\nhistory, when having access to the company customer database"),"."),(0,i.kt)("p",null,"In order to hide the actual customer id, you can use the concept of ",(0,i.kt)("em",{parentName:"p"},"masked fields"),".\nThis mechanism applies a masking function ",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," on the\ndecrypted field value, before putting it into the derived stream. This\nmasking function is ",(0,i.kt)("em",{parentName:"p"},"deterministic")," so a decrypted field value will\nalways map to the same masked field value. The same data scientist and\nthe same recommender model can work with the customer data ",(0,i.kt)("em",{parentName:"p"},"just as\neffectively"),", but without being able to link this to a person."),(0,i.kt)("h2",{id:"mask-seed"},"Mask seed"),(0,i.kt)("p",null,"The masking uses a standard hashing algorithm ",(0,i.kt)("sup",{parentName:"p",id:"fnref-2"},(0,i.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),". Assuming someone has\naccess to the customer database it would be easy to generate hash values\nfor all customer ids, and create a so-called ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Rainbow_table"},"rainbow\ntable"),". By adding a ",(0,i.kt)("em",{parentName:"p"},"seed"),"\nto the unmasked value, we make this mechanism unfeasible. The\n",(0,i.kt)("inlineCode",{parentName:"p"},"mask-seed")," is given during creation of a masked stream."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The mask seed is hidden when listing or getting streams.")),(0,i.kt)("h2",{id:"an-example"},"An example"),(0,i.kt)("p",null,"In the following example, a source stream ",(0,i.kt)("inlineCode",{parentName:"p"},"example")," and two derived streams are created:\n",(0,i.kt)("inlineCode",{parentName:"p"},"example-3")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"example-M3"),". In order to generate some data, you can execute\n",(0,i.kt)("inlineCode",{parentName:"p"},"strm simulate random-events example")," to simulate random data and send it to the input stream."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"strm create stream example\n# callout-1\nstrm create stream --derived-from example \\\n  # callout-2 \n  --levels 3 --masked-fields \\\n    strmprivacy/example/1.3.0:uniqueIdentifier,notSensitiveValue,someSensitiveValue,consistentValue\n  # callout-3 \n  --mask-seed=hi-there \n# callout-4\nstrm create stream --derived-from example --levels 3 \n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Creates stream named ",(0,i.kt)("inlineCode",{parentName:"li"},"example-M3")," because no explicit derived stream name was specified."),(0,i.kt)("li",{parentName:"ol"},"For events with data contract ",(0,i.kt)("inlineCode",{parentName:"li"},"strmprivacy/example/1.3.0")," mask fields\n",(0,i.kt)("inlineCode",{parentName:"li"},"uniqueIdentifier"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"notSensitiveValue"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"someSensitiveValue")," and\n",(0,i.kt)("inlineCode",{parentName:"li"},"consistentValue"),"."),(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"mask-seed")," attribute is explained in the previous section."),(0,i.kt)("li",{parentName:"ol"},"Creates stream named ",(0,i.kt)("inlineCode",{parentName:"li"},"example-3"))),(0,i.kt)("h3",{id:"events-in-the-encrypted-privacy-stream"},"Events in the encrypted privacy stream"),(0,i.kt)("p",null,"Below, a single event in the privacy stream ",(0,i.kt)("inlineCode",{parentName:"p"},"example")," can be seen (omitting some less significant fields for brevity here):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "strmMeta": {\n    "eventContractRef": "strmprivacy/example/1.3.0",\n    "nonce": -1505384217,\n    "timestamp": 1635416584627,\n    "keyLink": "67140ff9-e866-48ff-b89b-00ce69e287e6",\n    "consentLevels": [ 0, 1, 2, 3 ]\n  },\n  "uniqueIdentifier": "ATuasjJ30S4uRB64APNKNze/TH6V5NbA6gRLGjM=",\n  "consistentValue": "ATuasjKGKxAz0cIrFH9CQ/FBsizvFpQJq2t+eds8bHc=",\n  "someSensitiveValue": "ATuasjLXJ0vL0aY4CEV48O6PXU9zwm+v9ccGZBNcWzg=",\n  "notSensitiveValue": "not-sensitive-6"\n}\n')),(0,i.kt)("p",null,"Encrypted values can be generally recognized by looking at the\ntrailing ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," character. The fields ",(0,i.kt)("inlineCode",{parentName:"p"},"uniqueIdentifier"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"consistentValue"),"\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"someSensitiveValue")," are defined to be personal data through the\ndata contract."),(0,i.kt)("h3",{id:"events-in-the-derived-stream-without-masking"},"Events in the derived stream without masking"),(0,i.kt)("p",null,"In events from stream ",(0,i.kt)("inlineCode",{parentName:"p"},"example-3"),", all PII fields\nhave been decrypted. Their original ",(0,i.kt)("em",{parentName:"p"},"plaintext")," value is shown here. If one of\nthese contained a customer id, every data scientist with access to this\nstream ",(0,i.kt)("em",{parentName:"p"},"and")," access to the company customer database would be able to\nlink the history in this stream to an individual ",(0,i.kt)("em",{parentName:"p"},"person"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "strmMeta": {\n    "eventContractRef": "strmprivacy/example/1.3.0",\n    "nonce": -1505384217,\n    "timestamp": 1635416584627,\n    "keyLink": "67140ff9-e866-48ff-b89b-00ce69e287e6",\n    "consentLevels": [ 0, 1, 2, 3 ]\n  },\n  "uniqueIdentifier": "unique-5", \n  "consistentValue": "session-273",\n  "someSensitiveValue": "sensitive-0",\n  "notSensitiveValue": "not-sensitive-6"\n}\n')),(0,i.kt)("h3",{id:"events-in-the-derived-stream-with-masking"},"Events in the derived stream ",(0,i.kt)("strong",{parentName:"h3"},"with")," masking"),(0,i.kt)("p",null,"Assuming that a recommendation engine is to be trained on data of a data subject\nthat has provided full consent, it would still be great if the actual customer id ",(0,i.kt)("em",{parentName:"p"},"is\nnot being used"),"."),(0,i.kt)("p",null,"This can be done using ",(0,i.kt)("strong",{parentName:"p"},"masked fields"),". The stream with masked fields\ncontains values that are always the same for the same source value. In\nthis example, the plaintext ",(0,i.kt)("inlineCode",{parentName:"p"},"uniqueIdentifier")," has the value ",(0,i.kt)("inlineCode",{parentName:"p"},"unique-5"),"\nwith a corresponding masked value of ",(0,i.kt)("inlineCode",{parentName:"p"},"1083e8169d7138e990cc30095578452"),"."),(0,i.kt)("p",null,"Below, a single event from the ",(0,i.kt)("inlineCode",{parentName:"p"},"example-M3")," stream can be seen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "strmMeta": {\n    "eventContractRef": "strmprivacy/example/1.3.0",\n    "nonce": -1505384217,\n    "timestamp": 1635416584627,\n    "keyLink": "67140ff9-e866-48ff-b89b-00ce69e287e6",\n    "consentLevels": [ 0, 1, 2, 3 ]\n  },\n  "uniqueIdentifier": "1083e8169d7138e990cc30095578452",\n  "consistentValue": "7cc66d130664caa9efacda1026c1c44",\n  "someSensitiveValue": "e49bd309eed4a5094437a71ac2bc1cad",\n  "notSensitiveValue": "538ad30b2aa2781e855c4eb059cf68a3"\n}\n')),(0,i.kt)("p",null,"You can see even the ",(0,i.kt)("inlineCode",{parentName:"p"},"notSensitiveValue")," attribute has been masked, that no\nlonger contains the ",(0,i.kt)("inlineCode",{parentName:"p"},'"not-sensitive-6"')," value. You could use this for\ninstance to provide downstream data consumers maybe outside your\ncompany with values that are not personal, but that you still want to\nkeep inside your company."),(0,i.kt)("h2",{id:"using-the-masked-fields"},"Using the masked fields"),(0,i.kt)("p",null,"You could train a personalized model on a derived masked stream, and\nthen you could ",(0,i.kt)("em",{parentName:"p"},"recommend")," on the same stream. This way you could have a\nvery personalized model, without ever exposing sensitive personal data."),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"technically a hashing function",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,i.kt)("li",{parentName:"ol",id:"fn-2"},"currently MurmurHash3",(0,i.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0}}]);