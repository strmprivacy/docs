"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[7855],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,k=u["".concat(c,".").concat(d)]||u[d]||p[d]||s;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const s={title:"Receiving events over web socket",hide_table_of_contents:!1},o=void 0,i={unversionedId:"quickstart/streaming/receiving-data/listen-web-socket",id:"quickstart/streaming/receiving-data/listen-web-socket",title:"Receiving events over web socket",description:"When developing data pipelines, it's often useful to see some data flowing through them.",source:"@site/docs/03-quickstart/01-streaming/04-receiving-data/04-listen-web-socket.md",sourceDirName:"03-quickstart/01-streaming/04-receiving-data",slug:"/quickstart/streaming/receiving-data/listen-web-socket",permalink:"/docs/latest/quickstart/streaming/receiving-data/listen-web-socket",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Receiving events over web socket",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Kafka Consumer",permalink:"/docs/latest/quickstart/streaming/receiving-data/exporting-kafka"},next:{title:"Batch Processing",permalink:"/docs/latest/quickstart/batch/"}},c={},l=[{value:"Simulate random events and consume them via web socket",id:"simulate-random-events-and-consume-them-via-web-socket",level:2},{value:"Manually listening to the web socket endpoint",id:"wscat",level:2}],m={toc:l};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When developing data pipelines, it's often useful to see some data flowing through them.\nThis article covers how to use the Web Socket debug endpoint to do just that."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"strm sim run-random demo")," to generate random data on the ",(0,r.kt)("inlineCode",{parentName:"p"},"demo")," stream.")),(0,r.kt)("h2",{id:"simulate-random-events-and-consume-them-via-web-socket"},"Simulate random events and consume them via web socket"),(0,r.kt)("p",null,"Create a stream and simulate random events:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"strm create stream demo\nstrm simulate random-events demo\n\nStarting to simulate random strmprivacy/demo/1.0.2 events to stream demo.\nSending one event every 1000 ms.\nSent 5 events\n...\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"strm listen web-socket")," command is used for showing the events in\nreal time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ strm listen web-socket --help\nRead events via the web-socket (not for production purposes)\n\nUsage:\n  strm listen web-socket (stream-name) [flags]\n")),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/reference/cli-reference/strm/listen/web-socket"},"CLI")," for more details."),(0,r.kt)("p",null,"Next, consume the events from the simulator (ensure that the simulator keeps running, so use multiple shell sessions):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ strm listen web-socket demo\n{\n  "strmMeta": {\n    "eventContractRef": "strmprivacy/example/1.3.0",\n    "nonce": 159456216,\n    "timestamp": 1629202317371,\n    "keyLink": "1e3a47c9-2b4a-4820-b16c-975a63d69d9d",\n    "billingId": "demo8542234275",\n    "consentLevels": [ 0 ]\n  },\n  "uniqueIdentifier": "AW0ku+QlmuzFHUc5asuBS/S2aPhnJFRXMkd9Sl8Z",\n  "consistentValue": "AW0ku+SxBlO/YwVHZ8kbq7PbRiS9UqoafqYsGrYm2p8=",\n  "someSensitiveValue": "AW0ku+Tf+Plyd/WN6E4NEpEaBEGVBHReySSdbmrjacAe",\n  "notSensitiveValue": "not-sensitive-5"\n}\n...\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The debugging endpoint only shows ",(0,r.kt)("inlineCode",{parentName:"p"},"json")," values, even when the actual wire\nformat is Avro binary in this case. This is to make it easier to inspect\nthe values.")),(0,r.kt)("h2",{id:"wscat"},"Manually listening to the web socket endpoint"),(0,r.kt)("p",null,"The CLI does not have to be used to listen to the web socket endpoint. Any web socket client can be used to interact\nwith it."),(0,r.kt)("p",null,"First, request an OAuth 2.0 access token with\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://oauth.net/2/grant-types/client-credentials/"},"Client Credentials Grant"),"\nthat you need for stream authentication. In the code block below, the user (",(0,r.kt)("inlineCode",{parentName:"p"},"-u"),") is configured as\n",(0,r.kt)("inlineCode",{parentName:"p"},"clientId:clientSecret"),". This translates into an ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Basic <base64 encoded username + password>")," header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'accessToken=$(curl -X POST -u "stream-w0qu00hwl644b...:OygfdpwBqoekL..." \\\n  -d "grant_type=client_credentials" \\\n  "https://accounts.strmprivacy.io/auth/realms/streams/protocol/openid-connect/token" | jq -r .access_token)\n')),(0,r.kt)("p",null,"Here ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wscat"},"wscat")," is used to connect to\nthe web socket endpoint."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'wscat -H "authorization:Bearer $accessToken" -c wss://websocket.strmprivacy.io/ws\nConnected (press CTRL+C to quit)\n< {\n  "strmMeta": {\n    "eventContractRef": "strmprivacy/example/1.3.0",\n    "nonce": -1234364567,\n    "timestamp": 1629192610656,\n    "keyLink": "57ff8035-ae35-4e82-9bf2-a4d0a544c89d",\n    "billingId": "demo8542234275",\n    "consentLevels": [ 0, 1, 2, 3 ]\n  },\n  "uniqueIdentifier": "ARYe0czxEBMEC6jh5GWYicyvqBD0JBOMRoQSm2PO",\n  "consistentValue": "ARYe0cxg2b9W++VYEMYKbZXLzgQf+cAkcZuqUh82lMw=",\n  "someSensitiveValue": "ARYe0cwC5ImORtYRIzKPzaxKyjErTn/9fyGhVTseDxg=",\n  "notSensitiveValue": "not-sensitive-48"\n}\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"All fields in the data contract ",(0,r.kt)("inlineCode",{parentName:"p"},"strmprivacy/example/1.3.0")," that are marked as PII are encrypted,\nas the encrypted stream is consumed here.")))}p.isMDXComponent=!0}}]);