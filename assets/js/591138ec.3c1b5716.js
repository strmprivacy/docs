"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[9494],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,u=d["".concat(c,".").concat(h)]||d[h]||m[h]||i;return n?a.createElement(u,o(o({ref:t},p),{},{components:n})):a.createElement(u,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1875:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={title:"Schemas and Contracts",hide_table_of_contents:!1},c="Schemas and contracts",l={unversionedId:"concepts/schemas-and-contracts",id:"concepts/schemas-and-contracts",title:"Schemas and Contracts",description:"All events sent to STRM Privacy adhere to the following:",source:"@site/docs/concepts/schemas-and-contracts.md",sourceDirName:"concepts",slug:"/concepts/schemas-and-contracts",permalink:"/docs/latest/concepts/schemas-and-contracts",draft:!1,tags:[],version:"current",frontMatter:{title:"Schemas and Contracts",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Data Connectors",permalink:"/docs/latest/concepts/data-connectors"},next:{title:"The strmMeta section",permalink:"/docs/latest/concepts/strm-meta"}},p={},m=[{value:"Serialization Schemas",id:"serialization-schemas",level:2},{value:"Simple Schemas",id:"simple-schemas",level:3},{value:"Event Contracts",id:"event-contracts",level:2},{value:"Schema and Event Contract states",id:"schema-and-event-contract-states",level:2},{value:"DRAFT",id:"draft",level:3},{value:"ACTIVE",id:"active",level:3},{value:"ARCHIVED",id:"archived",level:3},{value:"Difference between <code>keyField</code> and <code>keyLink</code>",id:"difference-between-keyfield-and-keylink",level:2}],d={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"schemas-and-contracts"},"Schemas and contracts"),(0,i.kt)("p",null,"All events sent to STRM Privacy adhere to the following:"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Serialization Schema"),(0,i.kt)("br",{parentName:"p"}),"\n","This is the blueprint of the data that is sent, hence, this is about the\n",(0,i.kt)("strong",{parentName:"p"},"shape")," of the data."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Event Contract"),(0,i.kt)("br",{parentName:"p"}),"\n","This defines the ",(0,i.kt)("strong",{parentName:"p"},"content")," that is sent, and is composed of the\nverifications that should be done for the received content."),(0,i.kt)("h2",{id:"serialization-schemas"},"Serialization Schemas"),(0,i.kt)("p",null,"In order to guarantee the integrity of the data that is sent to STRM\nPrivacy, all events must conform to a ",(0,i.kt)("em",{parentName:"p"},"serialization schema"),". These\nschemas are easy to add and register with STRM Privacy, hence they are\nsimple to adapt to your use case."),(0,i.kt)("p",null,"The serialization schema defines how an event is turned into bytes and\nvice versa."),(0,i.kt)("p",null,"Currently, STRM Privacy supports ",(0,i.kt)("a",{parentName:"p",href:"http://avro.apache.org/"},"Apache Avro"),"\nand ",(0,i.kt)("a",{parentName:"p",href:"https://json-schema.org/"},"Json Schema"),", however other serialization\nformats may be added in the future."),(0,i.kt)("p",null,"Each serialization schema ",(0,i.kt)("strong",{parentName:"p"},"must include")," a section with STRM Privacy\nmeta information. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/concepts/strm-meta"},"the strmMeta documentation")," for\ndetails."),(0,i.kt)("h3",{id:"simple-schemas"},"Simple Schemas"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Simple Schemas")," are a STRM Privacy defined format that is used to\ncreate compatible Avro schemas without needing to understand the\ncomplexity of Avro or Json-schema schemas. Through regular Json or even\nYAML, you can define the shape of your data, while we interpret and\nabstract away the complexities for translating to the underlying Avro\nformat we use. We estimate that the vast majority of usecases will\nprefer these over manual Avro or Json-Schema creation."),(0,i.kt)("p",null,"Simple Schema ",(0,i.kt)("em",{parentName:"p"},"can not be used")," in the following cases:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"you already have a Kafka infrastructure with Avro or Json-Schema\nintegration (such as ",(0,i.kt)("a",{parentName:"p",href:"https://confluent.io"},"Confluent"),").")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"you aim to use Avro or Json-Schema schemas with complexities that\nare outside the scope of Simple Schema. These complexities are\nmostly the ",(0,i.kt)("inlineCode",{parentName:"p"},"union")," types. These Union types cannot be defined as PII\nor masked fields in any case."))),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/concepts/simple-schemas"},"here")," for details on how Simple Schema works."),(0,i.kt)("h2",{id:"event-contracts"},"Event Contracts"),(0,i.kt)("p",null,"In order to guarantee that data that is sent to STRM Privacy adheres to\nthe rules defined by your organization, events must conform to an ",(0,i.kt)("em",{parentName:"p"},"event\ncontract"),". Contracts determine the behavior of validations, which fields\nare encrypted, and how events are tied together (hence, they get the\nsame encryption key)."),(0,i.kt)("p",null,"An example event contract version is listed below."),(0,i.kt)("p",null,"A single version of a contract is linked to one, and only one\nserialization schema. The inverse is not necessary, one schema can be\nreferred to by 0 or more event contracts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"strmprivacy/clickstream/1.0.0")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "ref": {  \n    "handle": "strmprivacy", "name": "clickstream", "version": "1.0.0"\n  },\n  "schemaRef": { \n    "handle": "strmprivacy", "name": "clickstream", "version": "1.0.0"\n  },\n  "isPublic": true, \n  "keyField": "producerSessionId", \n  "piiFields": { \n    "customer/id": 0,\n    "producerSessionId": 1\n  },\n  "validations": [ \n    {\n      "field": "customer/id",\n      "type": "regex",\n      "value": "^.+$"\n    },\n    {\n      "field": "url",\n      "type": "regex",\n      "value": "^(https?|ftp|file)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"\n    }\n  ]\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"the reference to the event contract. In this case equal to the\nschema, but this is not necessary.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"the serialization schema reference, which includes the organization\nname, schema name and schema version.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"a schema or event contract can be public, in which case all STRM\nPrivacy customers can use it, or it can belong to a certain\norganization, and require organization credentials to use it.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'the name of the field in the serialization schema that is used to\n"tie" events together. Typically, this is what determines an end\nuser (i.e. your users) session.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"the fields whose content in an event should be considered sensitive\n(i.e. personally identifiable information), and should be encrypted\nby STRM Privacy.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"the validations that should be performed on the content of specific\nfields in an event."))),(0,i.kt)("p",null,"These contracts are very versatile to use, and a use case that STRM\nPrivacy foresees, is that a single serialization schema could\npotentially have many contracts (i.e. same shape of the data, but\ndifferent rules apply to it)."),(0,i.kt)("p",null,"The validations that are performed on the data that is received by\nStream Machine currently only support ",(0,i.kt)("a",{parentName:"p",href:"https://regex101.com/"},"Regular\nExpressions"),". We aim to extend the validation\nmechanisms based on customer use cases."),(0,i.kt)("p",null,"Next, an example for the validations follows:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Assume an attribute of your event, say 'user/customer_id' in your organization\nhas to consist of 9 digits not starting with a zero, you could easily have\nthis as a validation rule in the event contract, implemented with a regex.")),(0,i.kt)("p",null,"This is the mechanism that STRM Privacy provides to increase the\n",(0,i.kt)("em",{parentName:"p"},"quality")," of your event data: validate before acceptance, and let the\ndata processing teams define the rules instead of the data generating\nteams. An example of a validation can be seen (and tried) in\n",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/sending-curl"},"Sending and receiving an event by hand")),(0,i.kt)("h2",{id:"schema-and-event-contract-states"},"Schema and Event Contract states"),(0,i.kt)("p",null,"As both ",(0,i.kt)("em",{parentName:"p"},"schemas")," and ",(0,i.kt)("strong",{parentName:"p"},"event contracts")," are fundamental to describe data, give insight into what data goes where,\nbut are also used for describing actual events that flow through the system, state management is important."),(0,i.kt)("p",null,"It's not safe to just allow modifications or removals on ",(0,i.kt)("em",{parentName:"p"},"schemas")," and ",(0,i.kt)("strong",{parentName:"p"},"event contracts")," as it might impact either\nthe workings of the streams, but it also hinders traceability."),(0,i.kt)("p",null,"Both ",(0,i.kt)("em",{parentName:"p"},"schemas")," and ",(0,i.kt)("strong",{parentName:"p"},"event contracts")," can be in one of 3 states. See the image below:"),(0,i.kt)("img",{class:"schema-event-contract-states",alt:"Schema and Event Contract states",src:"/img/entity_states.svg"}),(0,i.kt)("p",null,"See below a description of each state."),(0,i.kt)("h3",{id:"draft"},"DRAFT"),(0,i.kt)("p",null,"This entity is still in development and can thus still be modified.\nIt has not yet been accepted by someone responsible. And because of this, it cannot yet be used for processing events."),(0,i.kt)("h3",{id:"active"},"ACTIVE"),(0,i.kt)("p",null,"This entity has been accepted and from now on, its properties are frozen; it cannot be modified anymore.\nFrom now on, it can be used for processing events."),(0,i.kt)("h3",{id:"archived"},"ARCHIVED"),(0,i.kt)("p",null,"This entity has reached its end-of-life state and is not used anymore.\nIt cannot be used for processing ",(0,i.kt)("em",{parentName:"p"},"new")," events, but since it is not physically deleted, it can still be referenced,\nfor example by in-flight events.\nIt can also still be viewed, for example for traceability purposes. If needed, it can be reactivated."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"At the moment, entities can be archived and reactivated freely, so in a way, archival is just a convenience.\nThis may change in the future though."))),(0,i.kt)("h2",{id:"difference-between-keyfield-and-keylink"},"Difference between ",(0,i.kt)("inlineCode",{parentName:"h2"},"keyField")," and ",(0,i.kt)("inlineCode",{parentName:"h2"},"keyLink")),(0,i.kt)("p",null,"It is important to note the difference between ",(0,i.kt)("inlineCode",{parentName:"p"},"keyField")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"keyLink"),",\nas they are related to each other, but are fundamentally different:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"keyField")," is part of the ",(0,i.kt)("strong",{parentName:"p"},"event contract")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"keyLink")," is part\nof the ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/concepts/strm-meta"},"strmMeta section")," of the ",(0,i.kt)("em",{parentName:"p"},"serialization\nschema"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"keyField")," determines which field in the ",(0,i.kt)("strong",{parentName:"p"},"serialization schema")," is\nused for considering whether events belong to the same sequence (for\nexample a session)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"keyLink")," ",(0,i.kt)("em",{parentName:"p"},"links")," a single event to an encryption key")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The value for ",(0,i.kt)("inlineCode",{parentName:"p"},"keyField")," is determined by you")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The value for ",(0,i.kt)("inlineCode",{parentName:"p"},"keyLink")," is determined by STRM Privacy")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The value of ",(0,i.kt)("inlineCode",{parentName:"p"},"keyField")," is used when creating a ",(0,i.kt)("inlineCode",{parentName:"p"},"keyLink")))),(0,i.kt)("p",null,"As you can see, the two have a strong relationship, but they are\ndifferent."))}h.isMDXComponent=!0}}]);