"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[718],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,v=d["".concat(l,".").concat(u)]||d[u]||m[u]||s;return n?a.createElement(v,i(i({ref:t},p),{},{components:n})):a.createElement(v,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7462),r=n(7294),s=n(2389),i=n(9548),o=n(6010),l="tabItem_LplD";function c(e){var t,n,s,c=e.lazy,p=e.block,m=e.defaultValue,d=e.values,u=e.groupId,v=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),f=(0,i.lx)(g,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(s=h[0])?void 0:s.props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,i.UB)(),k=b.tabGroupChoices,N=b.setTabGroupChoices,S=(0,r.useState)(y),w=S[0],x=S[1],_=[],j=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=u){var I=k[u];null!=I&&I!==w&&g.some((function(e){return e.value===I}))&&x(I)}var E=function(e){var t=e.currentTarget,n=_.indexOf(t),a=g[n].value;a!==w&&(j(t),x(a),null!=u&&N(u,a))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=_.indexOf(e.currentTarget)+1;n=_[a]||_[0];break;case"ArrowLeft":var r=_.indexOf(e.currentTarget)-1;n=_[r]||_[_.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},v)},g.map((function(e){var t=e.value,n=e.label,s=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return _.push(e)},onKeyDown:T,onFocus:E,onClick:E},s,{className:(0,o.Z)("tabs__item",l,null==s?void 0:s.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),c?(0,r.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function p(e){var t=(0,s.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},9161:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return d},default:function(){return v}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),i=n(9877),o=n(8215),l=["components"],c={title:"Examples in multiple languages",hide_table_of_contents:!1},p="Complete examples",m={unversionedId:"quickstart/full-example",id:"quickstart/full-example",title:"Examples in multiple languages",description:"This section helps you to set up a stream and start sending data to STRM Privacy.",source:"@site/docs/quickstart/full-example.md",sourceDirName:"quickstart",slug:"/quickstart/full-example",permalink:"/docs/docs/latest/quickstart/full-example",tags:[],version:"current",frontMatter:{title:"Examples in multiple languages",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Sending and receiving by hand",permalink:"/docs/docs/latest/quickstart/sending-curl"},next:{title:"Kafka consumer in Python",permalink:"/docs/docs/latest/quickstart/exporting-kafka"}},d=[{value:"Setting up a stream",id:"setting-up-a-stream",children:[],level:2},{value:"Using the programming language examples.",id:"using-the-programming-language-examples",children:[],level:2},{value:"Receiving data",id:"receiving-data",children:[],level:2}],u={toc:d};function v(e){var t=e.components,n=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"complete-examples"},"Complete examples"),(0,s.kt)("p",null,"This section helps you to set up a stream and start sending data to STRM Privacy."),(0,s.kt)("h2",{id:"setting-up-a-stream"},"Setting up a stream"),(0,s.kt)("p",null,"This section assumes that you have created an account on the\n",(0,s.kt)("a",{parentName:"p",href:"https://console.strmprivacy.io"},"console"),"."),(0,s.kt)("h2",{id:"using-the-programming-language-examples"},"Using the programming language examples."),(0,s.kt)("p",null,"In order to run these examples, you need the following:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"An input stream to send data to (if you don\u2019t know how, ",(0,s.kt)("a",{parentName:"p",href:"/docs/docs/latest/quickstart/creating-streams"},"go here")," to learn how to create\nstreams)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The credentials for this stream (presented upon stream creation). Either keep note of the returned values from the\n",(0,s.kt)("inlineCode",{parentName:"p"},"strm create stream")," command, or use ",(0,s.kt)("inlineCode",{parentName:"p"},"--save")," flag to store them in the ",(0,s.kt)("inlineCode",{parentName:"p"},"~/.config/strmprivacy/Stream")," directory."))),(0,s.kt)("p",null,"The following demo applications show how dummy data can be sent with a certain frequency. The data that is sent is quite\nstatic and does not result in any useful patterns for analysis, however, it does show how data can be constructed and\ntransferred to STRM Privacy."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Use ",(0,s.kt)("a",{parentName:"p",href:"/docs/docs/latest/quickstart/listen-web-socket"},"strm listen web-socket (stream-name)")," to debug issues."))),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"}," Currently (Aug. 2021) every example language has a different configuration file format. This is inconvenient and will be fixed. We aim to standardize this to the format created with\n",(0,s.kt)("inlineCode",{parentName:"p"},"strm create stream (stream-name) --save"),", so that getting up-and-running becomes easier."))),(0,s.kt)(i.Z,{mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"java",label:"Java",default:!0,mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.strmprivacy/java-driver"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.strmprivacy/java-driver.svg?label=Java%20Driver&color=F25C03",alt:"java-driver"})),"\n",(0,s.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.strmprivacy.schemas/demo-avro"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.strmprivacy.schemas/demo-avro.svg?label=demo-avro%20schema&color=F25C03",alt:"java-avro"}))),(0,s.kt)("p",null,"This example is\nalso ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/java-examples/blob/master/src/main/java/io/strmprivacy/examples/Sender.java"},"available on GitHub"),"\n. Please see the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/java-examples"},"repository")," for the readme."),(0,s.kt)("p",null,"Short steps to start sending data:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/strmprivacy/java-examples\ncd java-examples\nstrm create stream demo --save\nf=~/.config/strmprivacy/saved-entities/Stream/demo.json\nbillingId=$(cat $f | jq -r '.ref.billingId')\nclientId=$(cat $f | jq -r '.credentials[0].clientId')\nclientSecret=$(cat $f | jq -r '.credentials[0].clientSecret')\nmvn package\njava -jar target/java-examples-0.0.1-SNAPSHOT-jar-with-dependencies.jar \\\n  $billingId $clientId $clientSecret\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"org.eclipse.jetty.util.log                  - Logging initialized ...\nio.strmprivacy.driver.client.AuthService  - Initializing a new Auth Provider\nio.strmprivacy.examples.Sender            - 204\nio.strmprivacy.examples.Sender            - 204\nio.strmprivacy.examples.Sender            - 204\n\n...\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Sender.java"',title:'"Sender.java"'},'package io.strmprivacy.examples;\n\nimport io.strmprivacy.driver.client.StrmPrivacyClient;\nimport io.strmprivacy.driver.domain.Config;\nimport io.strmprivacy.schemas.demo.v1.DemoEvent;\nimport io.strmprivacy.schemas.demo.v1.StrmMeta;\nimport org.slf4j.Logger;\n\nimport java.util.Random;\nimport java.util.UUID;\n\nimport static java.util.Collections.singletonList;\nimport static org.slf4j.LoggerFactory.getLogger;\n\npublic class Sender {\n\n    private static final Logger LOG = getLogger(Sender.class);\n\n    private static final Random RANDOM = new Random();\n\n    public static void main(String[] args) throws InterruptedException {\n        new Sender().run(args);\n    }\n\n    /**\n     * start sending hardcoded avro events.\n     *\n     * @param args 3 parameters: [billingId, clientId, clientSecret]\n     */\n    private void run(String[] args) throws InterruptedException {\n        if (args.length != 3) {\n            System.out.println("Ensure that you\'ve provided all required input arguments: [billingId, clientId, clientSecret]");\n            System.exit(1);\n        }\n\n        var billingId = args[0];\n        var clientId = args[1];\n        var clientSecret = args[2];\n\n        var config = Config.builder().build();\n\n        StrmPrivacyClient client = StrmPrivacyClient.builder()\n                .billingId(billingId)\n                .clientId(clientId)\n                .clientSecret(clientSecret)\n                .config(config)\n                .build();\n\n        while (true) {\n            var event = createAvroEvent();\n\n            client.send(event)\n                    .whenComplete((response, exception) -> {\n                        if (exception != null) {\n                            LOG.error("An exception occurred while trying to send an event to STRM Privacy", exception);\n                        }\n\n                        if (response.getStatus() == 204) {\n                            LOG.debug("{}", response.getStatus());\n                        } else if (response.getStatus() == 400) {\n                            LOG.debug("Bad request: {}", response.getContentAsString());\n                        }\n                    });\n\n            Thread.sleep(500);\n        }\n    }\n\n    /**\n     * Generate a DemoEvent from a Java class that corresponds with a the strmprivacy/demo/1.0.2 schema.\n     * These Java classes are generated and provided by STRM Privacy, based on the\n     * serialization schema.\n     * <p>\n     *\n     * @return a {@link io.strmprivacy.schemas.StrmPrivacyEvent}\n     */\n    private static DemoEvent createAvroEvent() {\n        int consentLevel = RANDOM.nextInt(4);\n\n        return DemoEvent.newBuilder()\n                .setStrmMeta(StrmMeta.newBuilder()\n                        .setEventContractRef("strmprivacy/example/1.2.3")\n                        .setConsentLevels(singletonList(consentLevel))\n                        .build())\n                .setUniqueIdentifier(UUID.randomUUID().toString())\n                .setSomeSensitiveValue("A value that should be encrypted")\n                .setConsistentValue("a-user-session")\n                .setNotSensitiveValue("Hello from Java")\n                .build();\n    }\n}\n'))),(0,s.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pypi.org/project/strmprivacy-driver/"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/pypi/v/strmprivacy-driver.svg?label=Python%20Driver&color=F25C03",alt:"python-driver"})),"\n",(0,s.kt)("a",{parentName:"p",href:"https://pypi.org/project/strmprivacy-schemas-demo-avro/"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/pypi/v/strmprivacy-schemas-demo-avro.svg?label=demo+avro+schema&color=F25C03",alt:"python-avro"}))),(0,s.kt)("p",null,"This example is\nalso ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/python-examples/blob/master/examples/sender_async.py"},"available on GitHub"),". Please\nsee the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/python-examples"},"repository")," for the readme."),(0,s.kt)("p",null,"Short steps to start sending data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/strmprivacy/python-examples\ncd python-examples\npython3 -m venv .venv\n. .venv/bin/activate\npython3 -m pip install -r requirements.txt\nstrm create stream demo --save\nf=~/.config/strmprivacy/saved-entities/Stream/demo.json\nbillingId=$(cat $f | jq -r '.ref.billingId')\nclientId=$(cat $f | jq -r '.credentials[0].clientId')\nclientSecret=$(cat $f | jq -r '.credentials[0].clientSecret')\npython3 examples/sender_async.py --billing-id $billingId\\\n  --client-id $clientId --client-secret $clientSecret\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    DEBUG:strmprivacy.driver.client.auth:Initializing a new Auth Provider for SenderService\n    DEBUG:strmprivacy.driver.client.auth:authenticate\n    INFO:__main__:Event sent, response 204\n    INFO:__main__:Event sent, response 204\n    INFO:__main__:Event sent, response 204\n    ...\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="sender_async.py"',title:'"sender_async.py"'},'import asyncio\nimport logging\nimport sys\nimport random\nimport uuid\n\nfrom strmprivacy.driver import SerializationType\nfrom strmprivacy_io_strmprivacy_schemas_demo_v1.io.strmprivacy.schemas.demo.v1 import DemoEvent\n\nfrom client_builder import ClientBuilder\n\nlog = logging.getLogger(__name__)\nlog.setLevel(logging.INFO)\n\n\nclass Sender(object):\n    """\n    An Asynchronous generator that periodically creates an event and sends it to STRM Privacy\n    """\n\n    def __init__(self):\n        self._client = ClientBuilder.create_strm_privacy_client()\n\n    def __aiter__(self):\n        return self\n\n    async def __anext__(self):\n        event = create_avro_event()\n        return await self._client.send(event, SerializationType.AVRO_BINARY)\n\n    async def start_timers(self):\n        await self._client.start_timers()\n\n\ndef create_avro_event():\n    event = DemoEvent()\n\n    event.strmMeta.eventContractRef = "strmprivacy/example/1.2.3"\n    event.strmMeta.consentLevels = [random.randint(0, 3)]\n\n    event.uniqueIdentifier = str(uuid.uuid4())\n    event.someSensitiveValue = "A value that should be encrypted"\n    event.consistentValue = "a-user-session"\n    event.notSensitiveValue = "Hello from Python"\n\n    return event\n\n\nasync def main():\n    sender = Sender()\n    await sender.start_timers()  # re-authorization jwt tokens\n\n    async for response in sender:\n        if response == 204:  # event correctly accepted by endpoint\n            log.info(f"Event sent, response {response}")\n        else:\n            log.error(f"Something went wrong while trying to send event to Stream Machine, response: {response}")\n\n        await asyncio.sleep(0.2)\n\n\nif __name__ == \'__main__\':\n    logging.basicConfig(stream=sys.stderr)\n    asyncio.run(main())\n'))),(0,s.kt)(o.Z,{value:"nodejs",label:"NodeJS",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@strmprivacy.io/nodejs-driver"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@strmprivacy/nodejs-driver.svg?label=NodeJS+Driver&color=F25C03",alt:"nodejs-driver"})),"\n",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@strmprivacy.io/schemas-demo-avro"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@strmprivacy/schemas-demo-avro.svg?label=Avro+demo+schema&color=F25C03",alt:"nodejs-avro"}))),(0,s.kt)("p",null,"This example is also ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/nodejs-examples/blob/master/src/sender.ts"},"available on GitHub"),".\nPlease see the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/nodejs-examples"},"repository")," for the readme."),(0,s.kt)("p",null,"Quick steps getting started:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/strmprivacy/nodejs-examples\ncd nodejs-examples\nstrm create stream demo --save\ncat ~/.config/strmprivacy/saved-entities/Stream/demo.json | jq \\\n    '{billingId:.ref.billingId,\n      clientId:.credentials[0].clientId,\n      clientSecret:.credentials[0].clientSecret}' \\\n      > assets/credentials.json\nnpm i\nnpm run sender\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"> nodejs-driver-example@1.0.0 sender\n> ts-node ./src/sender.ts\n\nStatus 204\nStatus 204\n...\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="sender.ts"',title:'"sender.ts"'},"import { Sender } from '@strmprivacy/nodejs-driver';\nimport { DemoEvent } from '@strmprivacy/schemas-demo-avro';\n\nconst CONFIG = require('../assets/config.json');\n\n// Copy the template credentials file, name it `credentials.json` and fill out the values\nconst CREDENTIALS = require('../assets/credentials.json');\n\nconst startSender = async () => {\n  // Note: the schema id is hard coded in this example, in the config.json. This will be dynamically determined in a future version\n  const sender = new Sender({\n    ...CONFIG,\n    ...CREDENTIALS,\n  });\n\n  // Make sure to listen for error events, otherwise Node does not handle the error events (they're escalated)\n  sender.on('error', (error) => {\n    console.log('Sender', error);\n  });\n\n  await sender.connect().catch((e) => {\n    console.error(`Connect error ${e}`, e);\n  });\n\n  setInterval(async function () {\n    try {\n      const r = await sender.send(createEvent(), 'AVRO_BINARY');\n\n      console.log(`Status ${r.status}`);\n      if (r.status !== 204) {\n        console.error(`An error occurred while sending event:`, r);\n      }\n    } catch (e) {\n      console.error(`Error: ${e.message}`, e);\n    }\n  }, 100);\n};\n\nconst createEvent = () => {\n  const event = new DemoEvent();\n  event.strmMeta = {\n    eventContractRef: 'strmprivacy/example/1.2.3',\n    consentLevels: [0],\n  };\n\n  event.uniqueIdentifier = 'string';\n  event.someSensitiveValue = 'A value that should be encrypted';\n  event.consistentValue = 'a-user-session';\n  event.notSensitiveValue = 'Hello from NodeJS';\n\n  return event;\n};\n\nstartSender();\n"))),(0,s.kt)(o.Z,{value:"php",label:"Php",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://packagist.org/packages/strmprivacy/php-driver"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@strmprivacy/schemas-demo-avro.svg?label=Avro+demo+schema&color=F25C03",alt:"php-driver"}))),(0,s.kt)("p",null,"This example is also ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/php-examples/blob/master/examples/send.php"},"available on GitHub"),".\nPlease see the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/php-examples"},"repository")," for the readme."),(0,s.kt)("p",null,"Quick steps getting started:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/strmprivacy/php-examples\ncd php-examples\nstrm create stream demo --save\ncomposer install\n## send one DemoEvent to STRM Privacy:\nphp examples/send.php <billingId> <clientId> <clientSecret>\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="send.php"',title:'"send.php"'},"<?php\n\nuse Examples\\Events\\DemoEvent;\nuse Examples\\Utils\\ClientBuilder;\nuse StrmPrivacy\\Driver\\Enums\\SerializationType;\nuse StrmPrivacy\\Driver\\Sender;\n\ninclude_once(realpath(dirname(__FILE__)) . '/../vendor/autoload.php');\n\n/** @var \\StrmPrivacy\\Driver\\Sender $sender */\n$sender = ClientBuilder::build($argv, Sender::class);\n// or instantiate a Sender class directly:\n// $sender = new \\StrmPrivacy\\Driver\\Sender('billingId', 'clientId', 'clientSecret');\n\nwhile (true) {\n    $event = new DemoEvent();\n\n    $event->eventContractRef = 'strmprivacy/example/1.2.3';\n    $event->consentLevels = [0];\n    $event->uniqueIdentifier = uniqid();\n    $event->someSensitiveValue = 'A value that should be encrypted';\n    $event->consistentValue = 'a-user-session';\n    $event->notSensitiveValue = 'Hello from PHP';\n\n    $sender->send($event, SerializationType::AVRO_BINARY);\n    sleep(0.5);\n}\n")),(0,s.kt)("p",null,"For PHP there are no code generation tools (yet) available for schema classes. The DemoEvent class below has been\nmanually created. For every event schema, a similar class is needed. This class needs to implement\nthe ",(0,s.kt)("inlineCode",{parentName:"p"},"\\StrmPrivacy\\Driver\\Contracts\\Event")," contract."))),(0,s.kt)("h2",{id:"receiving-data"},"Receiving data"),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"/docs/docs/latest/quickstart/listen-web-socket"},"strm listen web-socket")," for a debugging view on the events."),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"/docs/docs/latest/quickstart/exporting-kafka"},"exporting to Kafka")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs/docs/latest/quickstart/receiving-s3"},"batch exporters")," for production event consuming."))}v.isMDXComponent=!0}}]);