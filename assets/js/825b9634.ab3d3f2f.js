"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[3988],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=i,u=d["".concat(l,".").concat(h)]||d[h]||p[h]||r;return n?a.createElement(u,o(o({ref:t},m),{},{components:n})):a.createElement(u,o({ref:t},m))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={title:"Simple Schema",hide_table_of_contents:!1},o=void 0,s={unversionedId:"quickstart/data-contracts/simple-schema",id:"quickstart/data-contracts/simple-schema",title:"Simple Schema",description:"This quickstart guides you through creating a Simple Schema and see how",source:"@site/docs/03-quickstart/03-data-contracts/01-simple-schema.md",sourceDirName:"03-quickstart/03-data-contracts",slug:"/quickstart/data-contracts/simple-schema",permalink:"/docs/latest/quickstart/data-contracts/simple-schema",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Simple Schema",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"Google Cloud in S3 mode",permalink:"/docs/latest/quickstart/data-connectors/gcloud-s3-compatible"},next:{title:"Data Subjects API",permalink:"/docs/latest/quickstart/data-contracts/data-subjects-api"}},l={},c=[{value:"Creating a Simple Schema",id:"creating-a-simple-schema",level:2},{value:"The generated schema",id:"the-generated-schema",level:3},{value:"Avro namespace",id:"avro-namespace",level:3},{value:"Creating a Data Contract",id:"creating-a-data-contract",level:2},{value:"Send some data with Python",id:"send-some-data-with-python",level:2},{value:"Simple Schema Reference",id:"simple-schema-reference",level:2}],m={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This quickstart guides you through creating a Simple Schema and see how\nit can be used. Simple Schemas are a much easier way of defining serialization\nschemas, as they can be based on widely adopted and probably familiar\nformats over the (complex) Avro and Json-schema formats. Especially for\nlarge schemas, Simple Schemas help to define your data shape much\nquicker."),(0,i.kt)("h2",{id:"creating-a-simple-schema"},"Creating a Simple Schema"),(0,i.kt)("p",null,"I have created the following yaml file that defines a simple event\nschema that I want to use."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml with-footer",metastring:"showLineNumbers title=simple-schema.yaml class=with-footer",showLineNumbers:!0,title:"simple-schema.yaml"},'name: Clicks\nnodes:\n  - name: SessionId\n    type: STRING\n    doc: the string value that connects events to a single sequence\n    required: true\n    repeated: false\n  - name: User Name\n    type: STRING\n    doc:  we use a data contract to define that this is private\n  - name: url\n    type: STRING\n    doc:  the URL of the current page\n  - name: mouse positions\n    repeated: true\n    type: NODE\n    nodes:\n      - name: x\n        type: INTEGER\n      - name: "y"\n        type: INTEGER\n')),(0,i.kt)("div",{class:"codeblock-footer"},(0,i.kt)("a",{target:"_blank",href:"pathname:///files/simple-schema.yaml",download:!0},"Download file")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Note ",(0,i.kt)("inlineCode",{parentName:"p"},"Session Id")," has two additional arguments: ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"repeated"),". This is necessary if you want to mark it as\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"keyField"),".")),(0,i.kt)("p",null,"To install this schema into STRM Privacy ",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," we execute the following\ncommand:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"$ strm create schema \\\n  # callout-2\n  --definition=simple-schema.yaml  \\\n  # callout-1\n  quickstart/demo/1.0.0\n\nSCHEMA                  TYPE   PUBLIC   FINGERPRINT\nquickstart/demo/1.0.0   AVRO   false    5923838772183777456\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"the simple schema file"),(0,i.kt)("li",{parentName:"ol"},"the schema reference which is ",(0,i.kt)("inlineCode",{parentName:"li"},"<handle>/<schema-name>/<schema-version>"),". You need to set your\n",(0,i.kt)("inlineCode",{parentName:"li"},"handle")," in the ",(0,i.kt)("a",{parentName:"li",href:"https://console.strmprivacy.io/profile"},"STRM Privacy\nconsole"))),(0,i.kt)("p",null,"To get the schema, execute the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'$ strm get schema quickstart/demo/1.0.0 -o json\n{\n    "schema": {\n        "ref": {\n            "handle": "quickstart",\n            "name": "demo",\n            "version": "1.0.0",\n            "schemaType": "AVRO"\n        },\n        "state": "PENDING",\n        "definition": "{\\"type\\":\\"record\\",\\"name\\":\\"Clicks\\",\\"namespace\\":\\"com.....\n        "simpleSchema": {\n            "name": "Clicks",\n            "avroName": "Clicks",\n            "nodes": [\n                {\n                    "type": "STRING",\n                    "name": "Session Id",\n                    "avroName": "SessionId",\n                    "doc": "the string value that connects events to a single sequence"\n                },\n                {\n                    "type": "STRING",\n                    "name": "User Name",\n                    "avroName": "UserName",\n                    "doc": "we use a data contract to define that this is private"\n                },\n                {\n                    "type": "STRING",\n                    "name": "url",\n                    "avroName": "url",\n                    "doc": "the url on the website"\n                },\n                {\n                    "type": "NODE",\n                    "name": "mouse positions",\n                    "avroName": "mousepositions",\n                    "doc": "price in UK pounds",\n                    "nodes": [\n                        {\n                            "type": "INTEGER",\n                            "name": "x",\n                            "avroName": "x",\n                        },\n                        {\n                            "type": "INTEGER",\n                            "name": "y",\n                            "avroName": "y",\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n...\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"avroName")," fields look similar to the\noriginal ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),". These names however, are subject to the ",(0,i.kt)("a",{parentName:"p",href:"https://avro.apache.org/docs/current/spec.html#names"},"Avro name\nconstraints"),"\nwhereas the ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," attributes in a Simple Schema are not ",(0,i.kt)("sup",{parentName:"p",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,i.kt)("h3",{id:"the-generated-schema"},"The generated schema"),(0,i.kt)("p",null,"The schema response, contains an actual ",(0,i.kt)("a",{parentName:"p",href:"https://avro.apache.org/docs/current/spec.html#schemas"},"Avro avsc\ndefinition\nstring"),", which has been generated from the provided Simple\nSchema.\nThis definition is what is actually being used by the STRM Privacy engine,\nthe Simple Schema is ",(0,i.kt)("em",{parentName:"p"},"only a way to create it"),"."),(0,i.kt)("p",null,"If you're interested in the actual Avro Schema, you can make it a little\nmore visible by using some ",(0,i.kt)("inlineCode",{parentName:"p"},"jq")," magic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ strm get schema quickstart/demo/1.0.0 -o json | jq -r .schema.definition | jq .fields[1]\n{\n  "name": "SessionId",\n  "type": [\n    "null",\n    "string"\n  ],\n  "doc": "the string value that connects events to a single sequence",\n  "default": null\n}\n')),(0,i.kt)("p",null,"Avoiding this complexity is exactly why we created Simple Schema. We expect that\na large majority of use cases on STRM Privacy will use Simple Schemas."),(0,i.kt)("h3",{id:"avro-namespace"},"Avro namespace"),(0,i.kt)("p",null,"The Avro definition contains a\n",(0,i.kt)("a",{parentName:"p",href:"https://avro.apache.org/docs/current/spec.html#schema_complex"},(0,i.kt)("inlineCode",{parentName:"a"},"namespace")),"\nattribute, which can be extracted with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ strm get schema quickstart/demo/1.0.0 -o json | jq -r .schema.definition | jq .namespace\n"quickstart.demo.v1_0_0"\n')),(0,i.kt)("p",null,"It is possible to override this in the Simple Schema ",(0,i.kt)("inlineCode",{parentName:"p"},"yaml")," file, but when it is absent, it\nwill be created from the data contracts' ",(0,i.kt)("inlineCode",{parentName:"p"},"<handle>/<name>/<version>"),".\nIts value will generally only be interesting when you want to\nuse ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/reference/cli-reference/strm/get/schema-code"},"generated programming language code")," to create events.\nIn the example that follows, Python generated code is used to create some\nevents."),(0,i.kt)("h2",{id:"creating-a-data-contract"},"Creating a Data Contract"),(0,i.kt)("p",null,"This quickstart requires a Data Contract with this schema that will define\nthat:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SessionId")," is the ",(0,i.kt)("inlineCode",{parentName:"li"},"keyField"),", the attribute that\nties events together."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"UserName")," is a PII field, level 1")),(0,i.kt)("admonition",{type:"important"},(0,i.kt)("p",{parentName:"admonition"},"these names currently are the ",(0,i.kt)("inlineCode",{parentName:"p"},"avroNames"),", not the names in the simple\nschema.")),(0,i.kt)("p",null,"Checking ",(0,i.kt)("inlineCode",{parentName:"p"},"strm create data-contract --help")," tells us what we need to\ncreate."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json with-footer",metastring:"showLineNumbers title=event-contract.json class=with-footer",showLineNumbers:!0,title:"event-contract.json"},'{\n  "keyField" : "SessionId",\n  "piiFields" : { "UserName": 1 }\n}\n')),(0,i.kt)("div",{class:"codeblock-footer"},(0,i.kt)("a",{target:"_blank",href:"pathname:///files/event-contract.json"},"Download file")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"strm create event-contract \\\n  -S quickstart/demo/1.0.0  \\\n  -F event-contract.json  \\\n  quickstart/demo-event-contract/2.0.0\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-S"),": the schema that we want to refer to in this data contract"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"-F"),": the definition of the data contract")),(0,i.kt)("h2",{id:"send-some-data-with-python"},"Send some data with Python"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"python3 -m venv venv\n. venv/bin/activate\n# callout-1\nstrm get schema-code quickstart/demo/1.0.0 --language=python\nunzip python-avro-demo-1.0.0.zip\ncd python-avro-demo-1.0.0/\n# callout-2\nmake install\n# callout-3\npip install strmprivacy-driver\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"generates Python code that knows how to serialize data that are\nvalid for the Simple Schema you just created."),(0,i.kt)("li",{parentName:"ol"},"you could also do ",(0,i.kt)("inlineCode",{parentName:"li"},"make dev-install"),". See the ",(0,i.kt)("inlineCode",{parentName:"li"},"Makefile")," contents."),(0,i.kt)("li",{parentName:"ol"},"the STRM Privacy Python driver is accidentally excluded.")),(0,i.kt)("p",null,"Next, follow along with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/quickstart/streaming/sending-data/language-examples"},"full Python\nexample"),". The difference in this quickstart however,\nis that the example ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/python-examples/blob/master/examples/sender_async.py"},(0,i.kt)("inlineCode",{parentName:"a"},"sender_async.py")),"\ncode needs to be modified to use the schema-code that you just generated."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python with-footer",metastring:"showLineNumbers title=sender.py class=with-footer",showLineNumbers:!0,title:"sender.py"},'## This code is somewhat simplified. Use the link above to download the full version.\n\n...\nfrom strmprivacy.driver import SerializationType, ClientConfig, StrmPrivacyClient\nfrom strmprivacy_quickstart_demo_v1_0_0.quickstart.demo.v1_0_0 import Clicks, mousepositions\n\nclass Sender(object):\n  async def __anext__(self):\n    event = create_avro_event()\n    return await self._client.send(event, SerializationType.AVRO_BINARY)\n\ndef create_avro_event():\n  event = Clicks()\n\n  event.strmMeta.eventContractRef = "quickstart/demo-event-contract/2.0.0"\n  event.strmMeta.consentLevels = [random.randint(0, 3)]\n\n  ## note the avro names instead of the Simple Schema names\n  event.SessionId = f"session-{random.randint(0,10)}"\n  event.UserName = f"user-{random.randint(0,10)}"\n  event.url = f"url-{random.randint(0,10)}"\n  event.PrijsInGb = random.random()*100.0\n  event.MousePositions = [\n    mousepositions.MousePositions({"x": random.randint(0,1000), "y": random.randint(0,1000)}),\n    mousepositions.MousePositions({"x": random.randint(0,1000), "y": random.randint(0,1000)})\n  ]\n  return event\n\n\nasync def main(config=ClientConfig()):\n  client = StrmPrivacyClient(sys.argv[1], sys.argv[2], sys.argv[3], config)\n  sender = Sender(client)\n  await sender.start_timers()  ## re-authorization jwt tokens\n\n  async for response in sender:\n    if response == 204:  ## event correctly accepted by endpoint\n      log.info(f"Event sent, response {response}")\n    else:\n      log.error(f"Something went wrong while trying to send event to STRM privacy response: {response}")\n    await asyncio.sleep(1)\n\n\nif __name__ == \'__main__\':\n  logging.basicConfig(stream=sys.stderr)\n  asyncio.run(main())\n')),(0,i.kt)("div",{class:"codeblock-footer"},(0,i.kt)("a",{target:"_blank",href:"pathname:///files/sender.py"},"Download file")),(0,i.kt)("p",null,"Continuing, create the following two streams:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"strm create stream demo --save\nstrm create stream --derived-from demo --save --levels 1\n")),(0,i.kt)("p",null,"Create a few environment variables that can be used to start up the\nPython code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"saveFile=$(strm context info Stream/demo)\nclientId=$(cat $saveFile | jq -r '.credentials[0].clientId')\nclientSecret=$(cat $saveFile | jq -r '.credentials[0].clientSecret')\n")),(0,i.kt)("p",null,"Next, start sending events with this Python code. The ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204"},"204 http status\ncode"),"\nindicates the event was accepted and processed by the STRM Privacy Event\nGateway with no issues."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 sender.py $clientId $clientSecret\n\nINFO:__main__:Event sent, response 204\nINFO:__main__:Event sent, response 204\n")),(0,i.kt)("p",null,"Since Python 3.10, you'll encouter a warning from the HTTP client:\n",(0,i.kt)("inlineCode",{parentName:"p"},"charset_normalizer:Encoding detection on empty bytes, assuming utf_8 intention."),"\non the 204 empty response. This is unfortunate, but can be safely ignored."),(0,i.kt)("p",null,"With the Web Socket endpoint, it is possible to consume the events of the input stream."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},'$ strm listen web-socket demo | jq \n{\n  "strmMeta": {\n    "eventContractRef": "quickstart/demo-event-contract/2.0.0",\n    "nonce": 1606491963,\n    "timestamp": 1640870686866,\n    "keyLink": "08ad5b5c-f71a-46ea-88b3-41e2facb6211",\n    "billingId": "strmquickstart1585470330",\n    "consentLevels": [ 3 ]\n  },\n  "SessionId": "session-0",\n  "UserName": "ASSPO2VhVDtRvZD+8yDkrJwwm8wEvnuXtSD6", \n  "url": "url-0",\n  "MousePositions": [ { "x": 353, "y": 188 }, { "x": 60, "y": 938 } ]\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"we don\u2019t need explicit credentials because we used the ",(0,i.kt)("inlineCode",{parentName:"li"},"--save"),"\noption to create the streams."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"UserName")," is encrypted.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The data that is received contains the ",(0,i.kt)("inlineCode",{parentName:"p"},"avroName")," attributes, and not the original ",(0,i.kt)("inlineCode",{parentName:"p"},"name"),". If you are interested in\nreceiving the original Simple Schema names, please ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/contact/"},"contact us"),".")),(0,i.kt)("p",null,"Regarding the derived stream, ",(0,i.kt)("inlineCode",{parentName:"p"},"UserName")," is now decrypted, and\nit would only receive events with ",(0,i.kt)("em",{parentName:"p"},"at least")," consent level 1 in the\nevent."),(0,i.kt)("p",null,"With the Web Socket endpoint, it is also possible to listen on the derived stream with consent level 1. Then,\nonly events with ",(0,i.kt)("em",{parentName:"p"},"at least")," consent level 1 in them will be received."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:"showLineNumbers",showLineNumbers:!0},'$ strm listen web-socket demo-1\n\n{\n  "strmMeta": {\n    "eventContractRef": "quickstart/demo-event-contract/2.0.0",\n    "nonce": -2105288911,\n    "timestamp": 1640870774948,\n    "keyLink": "08ad5b5c-f71a-46ea-88b3-41e2facb6211",\n    "billingId": "strmquickstart1585470330",\n    "consentLevels": [ 1 ]\n  },\n  "SessionId": "session-0",\n  // callout-1\n  "UserName": "user-7", \n  "url": "url-2",\n  "PrijsInGb": 3.3405764,\n  "MousePositions": [ { "x": 252, "y": 992 }, { "x": 940, "y": 265 } ]\n}\n')),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"UserName")," is now decrypted")),(0,i.kt)("h2",{id:"simple-schema-reference"},"Simple Schema Reference"),(0,i.kt)("p",null,"A simple schema is defined via the following\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/strmprivacy/api-definitions/blob/master/protos/strmprivacy/api/entities/v1/entities_v1.proto#L436"},"Protobuf")," definitions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:"showLineNumbers",showLineNumbers:!0},"message SimpleSchemaDefinition {\n  # callout-1\n  string name\n  # callout-2\n  string avro_name \n  # callout-3\n  string namespace \n  # callout-4\n  string doc \n  # callout-5\n  repeated SimpleSchemaNode nodes  \n}\n\nSimpleSchemaNode {\n  # callout-6\n  SimpleSchemaNodeType type \n  # callout-7\n  string name \n  # callout-2\n  string avro_name  \n  # callout-8\n  bool repeated\n  # callout-9\n  bool required\n  # callout-10\n  repeated SimpleSchemaNode nodes\n  # callout-4\n  string doc\n}\n\nenum SimpleSchemaNodeType {\n  STRING\n  BOOLEAN\n  FLOAT\n  INTEGER\n  LONG\n  # callout-6\n  NODE\n}\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"the name of the top level entity."),(0,i.kt)("li",{parentName:"ol"},"the ",(0,i.kt)("a",{parentName:"li",href:"https://avro.apache.org/docs/current/spec.html#names"},"Avro compatible name"),". This\nfield is heuristically derived from ",(0,i.kt)("inlineCode",{parentName:"li"},"name")," ",(0,i.kt)("em",{parentName:"li"},"unless")," you explicitly\nset its value in the SimpleSchema you provide. In that case it\u2019s up\nto you to make sure it is valid."),(0,i.kt)("li",{parentName:"ol"},"the namespace of the top level entity. This affects generated source\ncode. It is generated from ",(0,i.kt)("inlineCode",{parentName:"li"},"<handle>/<name>/<version>")," ",(0,i.kt)("em",{parentName:"li"},"unless")," you\nexplicitly set it, in which case you must make sure it\u2019s a valid\n",(0,i.kt)("a",{parentName:"li",href:"https://avro.apache.org/docs/current/spec.html#schema_complex"},"Avro namespace")),(0,i.kt)("li",{parentName:"ol"},"optional documentation that describes the meaning of the attribute\nor event"),(0,i.kt)("li",{parentName:"ol"},"a list of ",(0,i.kt)("inlineCode",{parentName:"li"},"SimpleSchemaNode")," entities describing attributes of the\nevent."),(0,i.kt)("li",{parentName:"ol"},"the ",(0,i.kt)("inlineCode",{parentName:"li"},"SimpleSchemaNodeType")," of an attribute. Simple ones are ",(0,i.kt)("inlineCode",{parentName:"li"},"STRING"),"\netc\u2026 The type can also be ",(0,i.kt)("inlineCode",{parentName:"li"},"NODE")," in which case the schema has a\nnested structure. In that case the ",(0,i.kt)("inlineCode",{parentName:"li"},"nodes")," field must hold ",(0,i.kt)("strong",{parentName:"li"},"at\nleast 1")," child ",(0,i.kt)("inlineCode",{parentName:"li"},"SimpleSchemaNode"),"."),(0,i.kt)("li",{parentName:"ol"},"the name of the attribute."),(0,i.kt)("li",{parentName:"ol"},"whether or not the entry is repeated, so it is either a single node\nor a list of nodes"),(0,i.kt)("li",{parentName:"ol"},"whether or not this attribute is required. When required your\nsending software ",(0,i.kt)("em",{parentName:"li"},"must")," fill in this value."),(0,i.kt)("li",{parentName:"ol"},"when ",(0,i.kt)("inlineCode",{parentName:"li"},"type")," is equal to ",(0,i.kt)("inlineCode",{parentName:"li"},"SimpleSchemaNodeType")," you can add 1 or more\n",(0,i.kt)("inlineCode",{parentName:"li"},"SimpleSchemaNodes")," here")),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"the only constraint is that the names must not\ncontain ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Unicode_control_characters"},"Unicode control characters"),(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}p.isMDXComponent=!0}}]);