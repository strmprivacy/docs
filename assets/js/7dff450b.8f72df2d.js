"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[5475],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),c=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||l;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9947:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=t(7462),a=t(3366),l=(t(7294),t(3905)),i=["components"],s={},o=void 0,c={unversionedId:"cli-reference/simulate",id:"version-1.0.0/cli-reference/simulate",title:"simulate",description:"The global simulate command runs a simulation with random events",source:"@site/versioned_docs/version-1.0.0/cli-reference/simulate.md",sourceDirName:"cli-reference",slug:"/cli-reference/simulate",permalink:"/docs/docs/1.0.0/cli-reference/simulate",tags:[],version:"1.0.0",frontMatter:{},sidebar:"docs",previous:{title:"schema-code",permalink:"/docs/docs/1.0.0/cli-reference/schema-code"},next:{title:"sink",permalink:"/docs/docs/1.0.0/cli-reference/sink"}},u=[{value:"Flags",id:"flags",children:[],level:2},{value:"run-random",id:"run-random",children:[{value:"Usage",id:"usage",children:[],level:3},{value:"Arguments",id:"arguments",children:[],level:3},{value:"Flags",id:"flags-1",children:[],level:3}],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The global ",(0,l.kt)("inlineCode",{parentName:"p"},"simulate")," command runs a simulation with random events\nagainst a given Source Stream, using the ClickStream schema."),(0,l.kt)("h2",{id:"flags"},"Flags"),(0,l.kt)("p",null,"--schema",(0,l.kt)("br",{parentName:"p"}),"\n","the schema reference, defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"strmprivacy/demo/1.0.2")),(0,l.kt)("p",null,"The schema determines the shape of the simulated events. The cli\nsimulator has a hardcoded reference between the schema and the used\nevent contract to send with the events."),(0,l.kt)("p",null,"this should probably be defined via the event contract reference instead\nof the schema. Todo for a future release of the cli."),(0,l.kt)("h2",{id:"run-random"},"run-random"),(0,l.kt)("p",null,"Run the simulation."),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"strm simulate random-events (stream-name) [flags]"),"."),(0,l.kt)("h3",{id:"arguments"},"Arguments"),(0,l.kt)("p",null,"stream-name",(0,l.kt)("br",{parentName:"p"}),"\n","The name of the Source Stream to send events to."),(0,l.kt)("h3",{id:"flags-1"},"Flags"),(0,l.kt)("p",null,"--client-id",(0,l.kt)("br",{parentName:"p"}),"\n","OAuth2 client credentials"),(0,l.kt)("p",null,"--client-secret",(0,l.kt)("br",{parentName:"p"}),"\n","OAuth2 client credentials"),(0,l.kt)("p",null,"--consent-levels",(0,l.kt)("br",{parentName:"p"}),"\n","Consent level combinations to be simulated (default\n","[none,0,0/1,0/1/2,0/1/2/3]",")."),(0,l.kt)("p",null,"--interval",(0,l.kt)("br",{parentName:"p"}),"\n","Interval in ms. between simulated events (default 1000)."),(0,l.kt)("p",null,"--quiet",(0,l.kt)("br",{parentName:"p"}),"\n","Don\u2019t spam stderr with progress output."),(0,l.kt)("p",null,"--session-prefix",(0,l.kt)("br",{parentName:"p"}),"\n",'Prefix string for sessions (default "session"). Changing this will\ngenerate a new encryption keys set on the engine. Otherwise existing\nkeys will be reused if it has been less than 24 hours since their\ncreation.'),(0,l.kt)("p",null,"--session-range",(0,l.kt)("br",{parentName:"p"}),"\n","Number of different sessions being generated (default 1000)."),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/docs/docs/1.0.0/cli-reference/#global-flags"},"Global flags")," for all global flags."),(0,l.kt)("p",null,"Client id and secret are optional flags ",(0,l.kt)("strong",{parentName:"p"},"provided")," the stream has been\ncreated with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--save")," flag. In that case\n",(0,l.kt)("inlineCode",{parentName:"p"},"~/.config/strmprivacy/saved-entities/Stream/<stream-name>.json")," will\nhold the necessary credentials, and the cli will use these."))}m.isMDXComponent=!0}}]);