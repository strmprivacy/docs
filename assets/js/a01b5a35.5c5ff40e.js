"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[1441],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(a,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6597:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],l={title:"completion",hide_title:!0},a=void 0,c={unversionedId:"cli-reference/strm/completion",id:"cli-reference/strm/completion",title:"completion",description:"strm completion",source:"@site/docs/cli-reference/strm/completion.md",sourceDirName:"cli-reference/strm",slug:"/cli-reference/strm/completion",permalink:"/docs/latest/cli-reference/strm/completion",tags:[],version:"current",frontMatter:{title:"completion",hide_title:!0},sidebar:"docs",previous:{title:"strm",permalink:"/docs/latest/cli-reference/strm/"},next:{title:"version",permalink:"/docs/latest/cli-reference/strm/version"}},p={},u=[{value:"strm completion",id:"strm-completion",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Usage",id:"usage",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],m={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"strm-completion"},"strm completion"),(0,i.kt)("p",null,"Generate completion script"),(0,i.kt)("h3",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"To load completions:"),(0,i.kt)("p",null,"Bash:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ source <(strm completion bash)\n\n# To load completions for each session, execute once:\n# Linux:\n$ strm completion bash > /etc/bash_completion.d/strm\n# macOS:\n$ strm completion bash > /usr/local/etc/bash_completion.d/strm\n")),(0,i.kt)("p",null,"Zsh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# If shell completion is not already enabled in your environment,\n# you will need to enable it.  You can execute the following once:\n\n$ echo "autoload -U compinit; compinit" >> ~/.zshrc\n\n# To load completions for each session, execute once:\n$ strm completion zsh > "${fpath[1]}/_strm"\n\n# You will need to start a new shell for this setup to take effect.\n')),(0,i.kt)("p",null,"fish:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  $ strm completion fish > ~/.config/fish/completions/strm.fish # or $XDG_CONFIG_HOME instead of ~/.config\n")),(0,i.kt)("p",null,"PowerShell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  PS> strm completion powershell | Out-String | Invoke-Expression\n\n  # To load completions for every new session, run:\n  PS> strm completion powershell > strm.ps1\n  # and source this file from your PowerShell profile.\n")),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"strm completion [bash|zsh|fish|powershell]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help   help for completion\n")),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'      --api-auth-url string            User authentication host (default "https://accounts.strmprivacy.io")\n      --api-host string                API host and port (default "api.strmprivacy.io:443")\n      --events-auth-url string         Event authentication host (default "https://sts.strmprivacy.io")\n      --kafka-bootstrap-hosts string   Kafka bootstrap brokers, separated by comma (default "export-bootstrap.kafka.strmprivacy.io:9092")\n  -o, --output string                  Output format [json, json-raw, table, plain] (default "table")\n      --token-file string              Token file that contains an access token (default is $HOME/.config/strmprivacy/credentials-<api-auth-url>.json)\n      --web-socket-url string          Websocket to receive events from (default "wss://websocket.strmprivacy.io/ws")\n')),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/latest/cli-reference/strm/"},"strm"),"\t - STRM Privacy CLI 1.22.0")))}f.isMDXComponent=!0}}]);