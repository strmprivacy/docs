"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[5849],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),f=s,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1722:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(7462),s=(n(7294),n(3905));const o={title:"web-socket",hide_title:!0},a=void 0,i={unversionedId:"reference/cli-reference/strm/listen/web-socket",id:"reference/cli-reference/strm/listen/web-socket",title:"web-socket",description:"strm listen web-socket",source:"@site/docs/04-reference/01-cli-reference/strm/listen/web-socket.md",sourceDirName:"04-reference/01-cli-reference/strm/listen",slug:"/reference/cli-reference/strm/listen/web-socket",permalink:"/docs/latest/reference/cli-reference/strm/listen/web-socket",draft:!1,tags:[],version:"current",frontMatter:{title:"web-socket",hide_title:!0},sidebar:"docs",previous:{title:"kafka",permalink:"/docs/latest/reference/cli-reference/strm/listen/kafka"},next:{title:"manage",permalink:"/docs/latest/reference/cli-reference/strm/manage/"}},c={},l=[{value:"strm listen web-socket",id:"strm-listen-web-socket",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"strm-listen-web-socket"},"strm listen web-socket"),(0,s.kt)("p",null,"Read events via the web-socket (not for production purposes)"),(0,s.kt)("h3",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"Listens to the web-socket debug endpoint to receive format events on streams transformed to json."),(0,s.kt)("p",null,"Note that this is not meant for production purposes. There's no access to the underlying Kafka consumer\nand no performance guarantees."),(0,s.kt)("h3",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"strm listen web-socket (stream-name) [flags]\n")),(0,s.kt)("h3",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'# Simulate some events\nstrm create stream test\nstrm simulate random-events test\nStarting to simulate random strmprivacy/demo/1.0.2 events to stream test. Sending one event every 1000 ms.\nSent 5 events\nSent 10 events\n\n# And in another terminal\n\nstrm listen web-socket test\n{"strmMeta": {"eventContractRef": "strmprivacy/example/1.3.0", "nonce": 1782462093, "timestamp": 1669990806395, "keyLink": "e6f...\n{"strmMeta": {"eventContractRef": "strmprivacy/example/1.3.0", "nonce": 1159687711, "timestamp": 1669990807404, "keyLink": "b58...\n{"strmMeta": {"eventContractRef": "strmprivacy/example/1.3.0", "nonce": -192240390, "timestamp": 1669990808413, "keyLink": "ba0...\n')),(0,s.kt)("h3",{id:"options"},"Options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'      --client-id string        client id to be used for receiving data\n      --client-secret string    client secret to be used for receiving data\n  -h, --help                    help for web-socket\n      --web-socket-url string   websocket to receive events from (default "wss://websocket.strmprivacy.io/ws")\n')),(0,s.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'      --api-auth-url string   user authentication host (default "https://accounts.strmprivacy.io")\n      --api-host string       api host and port (default "api.strmprivacy.io:443")\n  -o, --output string         output format [json, json-raw, table, plain] (default "table")\n  -p, --project string        project to use (defaults to context-configured project)\n      --token-file string     token file that contains an access token (default is $HOME/.config/strmprivacy/credentials-<api-auth-url>.json)\n')),(0,s.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/latest/reference/cli-reference/strm/listen/"},"strm listen"),"\t - Listen for events on a stream")))}m.isMDXComponent=!0}}]);