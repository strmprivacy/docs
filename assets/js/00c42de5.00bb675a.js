"use strict";(self.webpackChunkend_user_docs=self.webpackChunkend_user_docs||[]).push([[2278],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),f=a,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||s;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6780:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},assets:function(){return c},toc:function(){return p},default:function(){return f}});var r=n(7462),a=n(3366),s=(n(7294),n(3905)),o=["components"],i={title:"usage",hide_title:!0},l=void 0,u={unversionedId:"cli-reference/strm/get/usage",id:"cli-reference/strm/get/usage",title:"usage",description:"strm get usage",source:"@site/docs/cli-reference/strm/get/usage.md",sourceDirName:"cli-reference/strm/get",slug:"/cli-reference/strm/get/usage",permalink:"/docs/latest/cli-reference/strm/get/usage",tags:[],version:"current",frontMatter:{title:"usage",hide_title:!0},sidebar:"docs",previous:{title:"stream",permalink:"/docs/latest/cli-reference/strm/get/stream"},next:{title:"list",permalink:"/docs/latest/cli-reference/strm/list/"}},c={},p=[{value:"strm get usage",id:"strm-get-usage",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Usage",id:"usage",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],m={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"strm-get-usage"},"strm get usage"),(0,s.kt)("p",null,"Get Usage for a certain stream name"),(0,s.kt)("h3",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"Usage allows you to see how many events were sent on a certain stream. This is currently only the events received on the\nevent-gateway. Extracting events via Kafka or Batch exporters is not included."),(0,s.kt)("p",null,"The values are interpolated from cumulative event accounts, and sampled over intervals\n(the --by option). The default output is csv, but json is also available."),(0,s.kt)("p",null,"The default range is over the last 24 hours, with a default interval of 15 minutes."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"strm get usage bart --by 15m --from 2021/7/27-10:00  --until 2021/7/27-12:00\n\nfrom,count,duration,change,rate\n2021-07-27T10:00:00.000000+0200,173478,900,NaN,NaN\n2021-07-27T10:15:00.000000+0200,182422,900,8944,9.94\n2021-07-27T10:30:00.000000+0200,191363,900,8941,9.93\n2021-07-27T10:45:00.000000+0200,200305,900,8942,9.94\n2021-07-27T11:00:00.000000+0200,209248,900,8943,9.94\n2021-07-27T11:15:00.000000+0200,218192,900,8944,9.94\n2021-07-27T11:30:00.000000+0200,227134,900,8942,9.94\n2021-07-27T11:45:00.000000+0200,236078,900,8944,9.94\n2021-07-27T12:00:00.000000+0200,245023,900,8945,9.94\n")),(0,s.kt)("h3",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"strm get usage (stream-name) [flags]\n")),(0,s.kt)("h3",{id:"options"},"Options"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"      --by string      aggregate by (seconds|..m|..h|..d)\n      --from string    from YYYY/M/D-HH:mm\n  -h, --help           help for usage\n      --until string   until YYYY/M/D-HH:mm\n")),(0,s.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'      --api-auth-url string            User authentication host (default "https://accounts.strmprivacy.io")\n      --api-host string                API host and port (default "api.strmprivacy.io:443")\n      --events-auth-url string         Event authentication host (default "https://sts.strmprivacy.io")\n      --kafka-bootstrap-hosts string   Kafka bootstrap brokers, separated by comma (default "export-bootstrap.kafka.strmprivacy.io:9092")\n  -o, --output string                  Output format [json, json-raw, table, plain] (default "table")\n  -r, --recursive                      Retrieve entities and their dependents\n      --token-file string              Token file that contains an access token (default is $HOME/.config/strmprivacy/credentials-<api-auth-url>.json)\n      --web-socket-url string          Websocket to receive events from (default "wss://websocket.strmprivacy.io/ws")\n')),(0,s.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/latest/cli-reference/strm/get/"},"strm get"),"\t - Get an entity")))}f.isMDXComponent=!0}}]);